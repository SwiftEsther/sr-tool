[{"/Users/user/Documents/gig/sr-tool/src/App.js":"1","/Users/user/Documents/gig/sr-tool/src/reportWebVitals.js":"2","/Users/user/Documents/gig/sr-tool/src/index.js":"3","/Users/user/Documents/gig/sr-tool/src/shared/SideNav.js":"4","/Users/user/Documents/gig/sr-tool/src/Pages/States/UpdateState.js":"5","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/CreateAgent.js":"6","/Users/user/Documents/gig/sr-tool/src/Pages/ElectionResults/UpdateResult.js":"7","/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/UpdateIncident.js":"8","/Users/user/Documents/gig/sr-tool/src/Pages/States/StateList.js":"9","/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/StackedChart.js":"10","/Users/user/Documents/gig/sr-tool/src/Pages/ResultDashboard/components/BarChart.js":"11","/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/index.js":"12","/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/index.js":"13","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/index.js":"14","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/WardList.js":"15","/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/BarChart.js":"16","/Users/user/Documents/gig/sr-tool/src/shared/AuthenticatedRoute.js":"17","/Users/user/Documents/gig/sr-tool/src/Pages/Login/Login.js":"18","/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/index.js":"19","/Users/user/Documents/gig/sr-tool/src/shared/components/Pagination.js":"20","/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/index.js":"21","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/index.js":"22","/Users/user/Documents/gig/sr-tool/src/Pages/ElectionResults/index.js":"23","/Users/user/Documents/gig/sr-tool/src/shared/components/Downloader.js":"24","/Users/user/Documents/gig/sr-tool/src/contexts/ResultContext.js":"25","/Users/user/Documents/gig/sr-tool/src/Pages/States/CreateState.js":"26","/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/CreateIncident.js":"27","/Users/user/Documents/gig/sr-tool/src/lib/url.js":"28","/Users/user/Documents/gig/sr-tool/src/Pages/States/index.js":"29","/Users/user/Documents/gig/sr-tool/src/Pages/States/components/Stateform.js":"30","/Users/user/Documents/gig/sr-tool/src/Pages/Parties/components/Partyform.js":"31","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/components/WardForm.js":"32","/Users/user/Documents/gig/sr-tool/src/shared/NavTrigger.js":"33","/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/IncidentsData.js":"34","/Users/user/Documents/gig/sr-tool/src/config/environment/prod.config.js":"35","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/TerritoryIcon.js":"36","/Users/user/Documents/gig/sr-tool/src/config/environment/dev.config.js":"37","/Users/user/Documents/gig/sr-tool/src/contexts/PollingUnitContext.js":"38","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/UpdateWard.js":"39","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/UpdateAgent.js":"40","/Users/user/Documents/gig/sr-tool/src/Pages/Users/index.js":"41","/Users/user/Documents/gig/sr-tool/src/shared/Layout.js":"42","/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/components/LgaForm.js":"43","/Users/user/Documents/gig/sr-tool/src/shared/components/Uploader.js":"44","/Users/user/Documents/gig/sr-tool/src/Pages/Parties/PartyList.js":"45","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/PartyIcon.js":"46","/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/PollingUnitList.js":"47","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/UserIcon.js":"48","/Users/user/Documents/gig/sr-tool/src/contexts/StateContext.js":"49","/Users/user/Documents/gig/sr-tool/src/Pages/Users/components/Userform.js":"50","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/components/AgentForm.js":"51","/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/IncidentList.js":"52","/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/LgaList.js":"53","/Users/user/Documents/gig/sr-tool/src/contexts/IncidentContext.js":"54","/Users/user/Documents/gig/sr-tool/src/Pages/Users/CreateUser.js":"55","/Users/user/Documents/gig/sr-tool/src/Pages/Parties/UpdateParty.js":"56","/Users/user/Documents/gig/sr-tool/src/lib/api.js":"57","/Users/user/Documents/gig/sr-tool/src/helpers/showToast.js":"58","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/AgentList.js":"59","/Users/user/Documents/gig/sr-tool/src/shared/components/Ellipsis.js":"60","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/ResultIcon.js":"61","/Users/user/Documents/gig/sr-tool/src/contexts/UserContext.js":"62","/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/UpdatePollingUnit.js":"63","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/AgentIcon.js":"64"},{"size":10644,"mtime":1615840912408,"results":"65","hashOfConfig":"66"},{"size":362,"mtime":1607983712344,"results":"67","hashOfConfig":"66"},{"size":748,"mtime":1608744799933,"results":"68","hashOfConfig":"66"},{"size":2620,"mtime":1608105846328,"results":"69","hashOfConfig":"66"},{"size":3323,"mtime":1615840070312,"results":"70","hashOfConfig":"66"},{"size":2268,"mtime":1615839267571,"results":"71","hashOfConfig":"66"},{"size":3114,"mtime":1615840070295,"results":"72","hashOfConfig":"66"},{"size":2895,"mtime":1615840070298,"results":"73","hashOfConfig":"66"},{"size":8267,"mtime":1615844027410,"results":"74","hashOfConfig":"66"},{"size":13122,"mtime":1615839267579,"results":"75","hashOfConfig":"66"},{"size":6141,"mtime":1615839797700,"results":"76","hashOfConfig":"66"},{"size":6412,"mtime":1615839950403,"results":"77","hashOfConfig":"66"},{"size":8340,"mtime":1615846889950,"results":"78","hashOfConfig":"66"},{"size":11033,"mtime":1615846587973,"results":"79","hashOfConfig":"66"},{"size":5742,"mtime":1615840070313,"results":"80","hashOfConfig":"66"},{"size":4867,"mtime":1615840070296,"results":"81","hashOfConfig":"66"},{"size":764,"mtime":1615840587570,"results":"82","hashOfConfig":"66"},{"size":6050,"mtime":1616909962265,"results":"83","hashOfConfig":"66"},{"size":9059,"mtime":1615846618282,"results":"84","hashOfConfig":"66"},{"size":5755,"mtime":1615843472707,"results":"85","hashOfConfig":"66"},{"size":9241,"mtime":1615846914698,"results":"86","hashOfConfig":"66"},{"size":8832,"mtime":1615846940452,"results":"87","hashOfConfig":"66"},{"size":11353,"mtime":1615846607026,"results":"88","hashOfConfig":"66"},{"size":2110,"mtime":1615846779065,"results":"89","hashOfConfig":"66"},{"size":6667,"mtime":1610816486213,"results":"90","hashOfConfig":"66"},{"size":2472,"mtime":1615840070311,"results":"91","hashOfConfig":"66"},{"size":2344,"mtime":1615840070297,"results":"92","hashOfConfig":"66"},{"size":6564,"mtime":1610831081207,"results":"93","hashOfConfig":"66"},{"size":5813,"mtime":1615840070312,"results":"94","hashOfConfig":"66"},{"size":4194,"mtime":1610399629038,"results":"95","hashOfConfig":"66"},{"size":3525,"mtime":1610585537485,"results":"96","hashOfConfig":"66"},{"size":8840,"mtime":1610633312455,"results":"97","hashOfConfig":"66"},{"size":847,"mtime":1610221991377,"results":"98","hashOfConfig":"66"},{"size":7276,"mtime":1615840070296,"results":"99","hashOfConfig":"66"},{"size":135,"mtime":1620595786626,"results":"100","hashOfConfig":"66"},{"size":3336,"mtime":1609643348118,"results":"101","hashOfConfig":"66"},{"size":167,"mtime":1620595790296,"results":"102","hashOfConfig":"66"},{"size":4927,"mtime":1609624159769,"results":"103","hashOfConfig":"66"},{"size":2476,"mtime":1615840070313,"results":"104","hashOfConfig":"66"},{"size":2611,"mtime":1615840070293,"results":"105","hashOfConfig":"66"},{"size":3614,"mtime":1610224081054,"results":"106","hashOfConfig":"66"},{"size":554,"mtime":1610201265280,"results":"107","hashOfConfig":"66"},{"size":7446,"mtime":1610633312407,"results":"108","hashOfConfig":"66"},{"size":3661,"mtime":1615840070315,"results":"109","hashOfConfig":"66"},{"size":5153,"mtime":1615840070302,"results":"110","hashOfConfig":"66"},{"size":2412,"mtime":1609705286560,"results":"111","hashOfConfig":"66"},{"size":6056,"mtime":1615840070309,"results":"112","hashOfConfig":"66"},{"size":5617,"mtime":1610585036068,"results":"113","hashOfConfig":"66"},{"size":3885,"mtime":1609970756112,"results":"114","hashOfConfig":"66"},{"size":6383,"mtime":1610591454011,"results":"115","hashOfConfig":"66"},{"size":9923,"mtime":1611171717279,"results":"116","hashOfConfig":"66"},{"size":6389,"mtime":1615840070298,"results":"117","hashOfConfig":"66"},{"size":5534,"mtime":1615840070299,"results":"118","hashOfConfig":"66"},{"size":4473,"mtime":1610568347384,"results":"119","hashOfConfig":"66"},{"size":1886,"mtime":1610574110484,"results":"120","hashOfConfig":"66"},{"size":1932,"mtime":1615840070302,"results":"121","hashOfConfig":"66"},{"size":2097,"mtime":1612628188859,"results":"122","hashOfConfig":"66"},{"size":1001,"mtime":1610665901394,"results":"123","hashOfConfig":"66"},{"size":6248,"mtime":1615840070292,"results":"124","hashOfConfig":"66"},{"size":495,"mtime":1610399972622,"results":"125","hashOfConfig":"66"},{"size":4108,"mtime":1609668052832,"results":"126","hashOfConfig":"66"},{"size":2914,"mtime":1609015008629,"results":"127","hashOfConfig":"66"},{"size":2691,"mtime":1615840070309,"results":"128","hashOfConfig":"66"},{"size":2503,"mtime":1610584999384,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},"143hu0j",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"135"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"135"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"171","usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"135"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"135"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"135"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"135"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Documents/gig/sr-tool/src/App.js",["281","282"],"import './App.css';\nimport \"./styles/main.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Switch, Redirect } from 'react-router';\nimport Modal from 'react-modal';\nimport Users from './Pages/Users';\nimport Login from './Pages/Login/Login';\nimport { ToastContainer } from 'react-toastify';\nimport AuthenticatedRoute from './shared/AuthenticatedRoute';\nimport { useContext } from 'react';\nimport { AuthContext } from './contexts/AuthContext';\nimport CreateUser from './Pages/Users/CreateUser';\nimport UpdateUser from './Pages/Users/UpdateUser';\nimport { UserController } from './contexts/UserContext';\nimport States from './Pages/States';\nimport { StateController } from './contexts/StateContext';\nimport CreateState from './Pages/States/CreateState';\nimport UpdateState from './Pages/States/UpdateState';\nimport Lgas from './Pages/Lgas';\nimport { LgaController } from './contexts/LgaContext';\nimport CreateLga from './Pages/Lgas/CreateLga';\nimport UpdateLga from './Pages/Lgas/UpdateLga';\nimport { WardController } from './contexts/WardContext';\nimport Wards from './Pages/Wards';\nimport CreateWard from './Pages/Wards/CreateWard';\nimport UpdateWard from './Pages/Wards/UpdateWard';\nimport { PUController } from './contexts/PollingUnitContext';\nimport PollingUnits from './Pages/PollingUnits';\nimport CreatePollingUnit from './Pages/PollingUnits/CreatePollingUnit';\nimport UpdatePollingUnit from './Pages/PollingUnits/UpdatePollingUnit';\nimport Parties from './Pages/Parties';\nimport { PartyController } from './contexts/PartyContext';\nimport CreateParty from './Pages/Parties/CreateParty';\nimport UpdateParty from './Pages/Parties/UpdateParty';\nimport { AgentController } from './contexts/AgentContext';\nimport Agents from './Pages/Agents';\nimport CreateAgent from './Pages/Agents/CreateAgent';\nimport UpdateAgent from './Pages/Agents/UpdateAgent';\nimport { ResultController } from './contexts/ResultContext';\nimport Results from './Pages/ElectionResults';\nimport CreateResult from './Pages/ElectionResults/CreateResult';\nimport UpdateResult from './Pages/ElectionResults/UpdateResult';\nimport Incidents from './Pages/Incidents';\nimport CreateIncident from './Pages/Incidents/CreateIncident';\nimport UpdateIncident from './Pages/Incidents/UpdateIncident';\nimport { IncidentController } from './contexts/IncidentContext';\nimport ResultDashboard from './Pages/ResultDashboard';\nimport IncidentDashboard from './Pages/IncidentDashboard';\n\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  const [userState, dispatch] = useContext(AuthContext);\n  return (\n    <>\n      <ToastContainer />\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        {/* <Route path=\"/results\" component={Results} /> */}\n        <Route path=\"/users/create\" render ={routerProps => <UserController><CreateUser {...routerProps}/></UserController>} />\n        <Route path=\"/users/:id\" render ={routerProps => <UserController><UpdateUser {...routerProps}/></UserController>} />\n        <Route path=\"/users\"  render ={routerProps => <UserController><Users {...routerProps}/></UserController>} />\n\n        <AuthenticatedRoute path=\"/territories/states/create\" component ={routerProps => <StateController><CreateState {...routerProps}/></StateController>} />\n        <AuthenticatedRoute path=\"/territories/states/:id\" component ={routerProps => <StateController><UpdateState {...routerProps}/></StateController>} />\n        <AuthenticatedRoute path=\"/territories/states\" component ={routerProps => <StateController><States {...routerProps}/></StateController>} />\n        \n        {/* <Route path=\"/territories/states/create\"  render ={routerProps => <StateController><CreateState {...routerProps}/></StateController>} />\n        <Route path=\"/territories/states/:id\" render ={routerProps => <StateController><UpdateState {...routerProps}/></StateController>} />\n        <Route path=\"/territories/states\"  render ={routerProps => <StateController><States {...routerProps}/></StateController>} /> */}\n\n        <AuthenticatedRoute path=\"/territories/lgas/create\" component ={routerProps => <LgaController><CreateLga {...routerProps}/></LgaController>} />\n        <AuthenticatedRoute path=\"/territories/lgas/:id\" component ={routerProps => <LgaController><UpdateLga {...routerProps}/></LgaController>} />\n        <AuthenticatedRoute path=\"/territories/lgas\" component ={routerProps => <LgaController><Lgas {...routerProps}/></LgaController>} />\n\n        {/* <Route path=\"/territories/lgas/create\"  render ={routerProps => <LgaController><CreateLga {...routerProps}/></LgaController>} />\n        <Route path=\"/territories/lgas/:id\" render ={routerProps => <LgaController><UpdateLga {...routerProps}/></LgaController>} />\n        <Route path=\"/territories/lgas\"  render ={routerProps => <LgaController><Lgas {...routerProps}/></LgaController>} /> */}\n\n        <AuthenticatedRoute path=\"/territories/wards/create\" component ={routerProps => <WardController><CreateWard {...routerProps}/></WardController>} />\n        <AuthenticatedRoute path=\"/territories/wards/:id\" component ={routerProps => <WardController><UpdateWard {...routerProps}/></WardController>} />\n        <AuthenticatedRoute path=\"/territories/wards\" component ={routerProps => <WardController><Wards {...routerProps}/></WardController>} />\n\n        {/* <Route path=\"/territories/wards/create\"  render ={routerProps => <WardController><CreateWard {...routerProps}/></WardController>} />\n        <Route path=\"/territories/wards/:id\" render ={routerProps => <WardController><UpdateWard {...routerProps}/></WardController>} />\n        <Route path=\"/territories/wards\"  render ={routerProps => <WardController><Wards {...routerProps}/></WardController>} /> */}\n\n        <AuthenticatedRoute path=\"/territories/polling-units/create\" component ={routerProps => <PUController><CreatePollingUnit {...routerProps}/></PUController>} />\n        <AuthenticatedRoute path=\"/territories/polling-units/:id\" component ={routerProps => <PUController><UpdatePollingUnit {...routerProps}/></PUController>} />\n        <AuthenticatedRoute path=\"/territories/polling-units\" component ={routerProps => <PUController><PollingUnits {...routerProps}/></PUController>} />\n\n        {/* <Route path=\"/territories/polling-units/create\"  render ={routerProps => <PUController><CreatePollingUnit {...routerProps}/></PUController>} />\n        <Route path=\"/territories/polling-units/:id\" render ={routerProps => <PUController><UpdatePollingUnit {...routerProps}/></PUController>} />\n        <Route path=\"/territories/polling-units\"  render ={routerProps => <PUController><PollingUnits {...routerProps}/></PUController>} /> */}\n        \n        <AuthenticatedRoute path=\"/parties/create\" component ={routerProps => <PartyController><CreateParty {...routerProps}/></PartyController>} />\n        <AuthenticatedRoute path=\"/parties/:id\" component ={routerProps => <PartyController><UpdateParty {...routerProps}/></PartyController>} />\n        <AuthenticatedRoute path=\"/parties\" component ={routerProps => <PartyController><Parties {...routerProps}/></PartyController>} />\n\n        {/* <Route path=\"/parties/create\"  render ={routerProps => <PartyController><CreateParty {...routerProps}/></PartyController>} />\n        <Route path=\"/parties/:id\" render ={routerProps => <PartyController><UpdateParty {...routerProps}/></PartyController>} />\n        <Route path=\"/parties\"  render ={routerProps => <PartyController><Parties {...routerProps}/></PartyController>} /> */}\n\n        <AuthenticatedRoute path=\"/agents/create\" component ={routerProps => <AgentController><CreateAgent {...routerProps}/></AgentController>} />\n        <AuthenticatedRoute path=\"/agents/:id\" component ={routerProps => <AgentController><UpdateAgent {...routerProps}/></AgentController>} />\n        <AuthenticatedRoute path=\"/agents\" component ={routerProps => <AgentController><Agents {...routerProps}/></AgentController>} />\n\n        {/* <Route path=\"/agents/create\"  render ={routerProps => <AgentController><CreateAgent {...routerProps}/></AgentController>} />\n        <Route path=\"/agents/:id\" render ={routerProps => <AgentController><UpdateAgent {...routerProps}/></AgentController>} />\n        <Route path=\"/agents\"  render ={routerProps => <AgentController><Agents {...routerProps}/></AgentController>} /> */}\n\n        {/* <Route path=\"/results/create\"  render ={routerProps => <ResultController><CreateResult {...routerProps}/></ResultController>} />\n        <Route path=\"/results/:id\" render ={routerProps => <ResultController><UpdateResult {...routerProps}/></ResultController>} />\n        <Route path=\"/results\"  render ={routerProps => <ResultController><Results {...routerProps}/></ResultController>} /> */}\n\n        <AuthenticatedRoute path=\"/results/create\" component ={routerProps => <ResultController><CreateResult {...routerProps}/></ResultController>} />\n        <AuthenticatedRoute path=\"/results/:id\" component ={routerProps => <ResultController><UpdateResult {...routerProps}/></ResultController>} />\n        <AuthenticatedRoute path=\"/results\" component ={routerProps => <ResultController><Results {...routerProps}/></ResultController>} />\n\n        {/* <Route path=\"/incidents/create\"  render ={routerProps => <IncidentController><CreateIncident {...routerProps}/></IncidentController>} />\n        <Route path=\"/incidents/:id\" render ={routerProps => <IncidentController><UpdateIncident {...routerProps}/></IncidentController>} /> */}\n        <AuthenticatedRoute path=\"/incidents/create\" component ={routerProps => <IncidentController><CreateIncident {...routerProps}/></IncidentController>} />\n        <AuthenticatedRoute path=\"/incidents/:id\" component ={routerProps => <IncidentController><UpdateIncident {...routerProps}/></IncidentController>} />\n        <AuthenticatedRoute path=\"/incidents\" component ={routerProps => <IncidentController><Incidents {...routerProps}/></IncidentController>} />\n\n        {/* <Route path=\"/dashboard/results\"  render ={routerProps => <ResultController><ResultDashboard {...routerProps}/></ResultController>} />\n        <Route path=\"/dashboard/incidents\"  render ={routerProps => <IncidentController>\n        <IncidentDashboard {...routerProps}/></IncidentController>} /> */}\n\n        <AuthenticatedRoute path=\"/dashboard/results\" component ={routerProps => <ResultController><ResultDashboard {...routerProps}/></ResultController>} />\n        <AuthenticatedRoute path=\"/dashboard/incidents\" component ={routerProps => <IncidentController><IncidentDashboard {...routerProps}/></IncidentController>} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/gig/sr-tool/src/reportWebVitals.js",[],["283","284"],"/Users/user/Documents/gig/sr-tool/src/index.js",[],["285","286"],"/Users/user/Documents/gig/sr-tool/src/shared/SideNav.js",["287","288","289","290"],"/Users/user/Documents/gig/sr-tool/src/Pages/States/UpdateState.js",["291","292"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Breadcrumbs } from 'react-breadcrumbs';\nimport Layout from '../../shared/Layout';\nimport {updateState, getStateById} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport { StateContext } from '../../contexts/StateContext';\nimport StateForm from './components/Stateform';\nimport axios from 'axios';\n\nconst UpdateState = ({match, location, history}) => {\n    console.log(location)\n    let token = localStorage.getItem('access_token');\n    const [state, dispatch] = useContext(StateContext);\n    const [currentState, setCurrentState] = useState(location.state?.state);\n\n    const handleUpdate = async(e, values, setSubmitting) => {\n        e.preventDefault();\n        console.log('vs;',values)\n        let formData = new FormData();\n        formData.append('name', values.name);\n        formData.append('code', values.name);\n        formData.append('file', values.map)\n        console.log('Req', formData)\n        dispatch({type: 'UPDATE_STATE'});\n         setSubmitting(true);\n         await axios({\n             method: 'put',\n             url: `${updateState}/${currentState.id}`,\n             data: formData,\n             headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `Bearer ${token}`\n             }\n         })\n            .then((res) => {\n                dispatch({type: 'UPDATE_STATE_SUCCESS', payload: {response: res}});\n                setSubmitting(false);\n                history.push(\"/territories/states\");\n                // showToast('success', `${res.statusCode || 'Success'}: ${res.statusMessage || 'State updated successfully'}`);\n            })\n            .catch((err) => {\n                dispatch({type: 'UPDATE_STATE_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n                setSubmitting(false);\n            });\n    }\n\n    const getState = () => {\n        dispatch({type: 'GET_STATE_BY_ID'});\n         apiRequest(`${getStateById}/${match.params.id}`, 'get')\n            .then((res) => {\n                console.log(res.state)\n                setCurrentState(res.state);\n                dispatch({type: 'GET_STATE_BY_ID_SUCCESS', payload: {response: res}});\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_STATE_BY_ID_FAILURE', payload: {error: err}});\n                showToast('error', 'Something went wrong. Please try again later')\n            });\n    }\n\n    useEffect(() => {\n        getState();\n    }, [])\n\n    return (\n        <Layout location={location}>\n            <Breadcrumbs className=\"w-full lg:px-3.5 px-1 pt-7 pb-5 text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Election Territories',\n                pathname: \"/territories\"}, {id: 2,title: 'States',\n                pathname: \"/territories/states\"}, {id: 3,title: 'Update State',\n                pathname: match.path}]}/>\n            <div className=\"py-9 px-3.5\">\n                <StateForm formFields={currentState} handleFormSubmit={handleUpdate}/>\n            </div>\n        </Layout>\n    );\n}\n\nexport default UpdateState;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/CreateAgent.js",["293"],"/Users/user/Documents/gig/sr-tool/src/Pages/ElectionResults/UpdateResult.js",["294","295"],"/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/UpdateIncident.js",["296","297","298"],"import React, { useContext, useState } from 'react';\nimport { Breadcrumbs } from 'react-breadcrumbs';\nimport Layout from '../../shared/Layout';\nimport {updateResult} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport { IncidentContext } from '../../contexts/IncidentContext';\nimport IncidentForm from './components/IncidentForm';\nimport { values } from 'lodash';\n\nconst UpdateIncident = ({match, location, history}) => {\n    const {incident} = location.state;\n    let data = {\n        pollingUnit: incident.pollingUnit.id,\n        lga: incident.lga.id,\n        ward: incident.ward.id,\n        incidentLevel: incident.incidentLevel.id,\n        incidentType: incident.incidentType.id,\n        incidentStatus: incident.incidentStatus.id,\n        location: incident.reportedLocation,\n        phoneNumber: incident.phoneNumberToContact,\n        description: incident.description\n    };\n    const [incidentState, dispatch] = useContext(IncidentContext);\n    const [currentIncident, setCurrentIncident] = useState(data);\n    const handleUpdate = (values, {setSubmitting}) => {\n        dispatch({type: 'UPDATE_INCIDENT'});\n        const requestBody = {\n            incidentLevelId: values.incidentLevel,\n            incidentTypeId: values.incidentType,\n            incidentStatusId: values.incidentStatus,\n            lgaId: values.lga,\n            wardId: values.ward,\n            pollingUnitId: values.pollingUnit,\n            reportedLocation: values.location,\n            phoneNumberToContact: values.phoneNumber,\n            description: values.description\n        }\n         setSubmitting(true);\n         apiRequest(updateResult, 'put', {...requestBody})\n            .then((res) => {\n                dispatch({type: 'UPDATE_INCIDENT_SUCCESS', payload: {response: res}});\n                setSubmitting(false);\n                history.push(\"/incidents\");\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n            })\n            .catch((err) => {\n                dispatch({type: 'UPDATE_INCIDENT_FAILURE', payload: {error: err}});\n                setSubmitting(false);\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n    return (\n        <Layout location={location}>\n            <Breadcrumbs className=\"w-full lg:px-3.5 px-1 pt-7 pb-5 text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Incidents',\n                pathname: \"/incidents\"}, {id: 2,title: 'Update Incident',\n                pathname: match.path}]}/>\n            <div className=\"py-9 xl:px-3.5 px-1\">\n                <IncidentForm formFields={currentIncident} handleFormSubmit={handleUpdate}/>\n            </div>\n        </Layout>\n    );\n}\n\nexport default UpdateIncident;\n","/Users/user/Documents/gig/sr-tool/src/Pages/States/StateList.js",["299"],"import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport Modal from 'react-modal';\nimport Ellipsis from '../../shared/components/Ellipsis';\nimport {deleteState, toggleDefaultState} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport { StateContext } from '../../contexts/StateContext';\nimport Loader from '../../shared/components/Loader';\nimport env from '../../config/env.config';\nimport Map from '../../shared/assets/map.svg';\n\nconst StateList = ({states, loading, getStates}) => {\n    const [state, dispatch] = useContext(StateContext);\n    const [showModal, setShowModal] = useState(false);\n    const [showDefault, setShowDefault] = useState(false);\n    const [currentState, setCurrentState] = useState(null);\n    const [defaultState, setDefaultState] = useState(null);\n    const baseUrl = env().baseUrl;\n    const version = env().version;\n    const customStyles = {\n        overlay: {\n            backgroundColor: 'transparent'\n        },\n        content : {\n            top : '50%',\n            left : '50%',\n            right : 'auto',\n            width : '50%',\n            bottom : 'auto',\n            marginRight : '-50%',\n            padding: '29px 16px 40px 36px',\n            transform : 'translate(-50%, -50%)'\n        }\n    };\n\n    const handleDefaultState = (state) => {\n        console.log(state);\n        setDefaultState(state);\n        dispatch({type: 'SET_DEFAULT_STATE'});\n         apiRequest(`${toggleDefaultState}`, 'get', {params: {code: defaultState.code, name: defaultState.name}})\n            .then((res) => {\n                dispatch({type: 'SET_DEFAULT_STATE_SUCCESS', payload: {response: res}});\n                setShowDefault(false);\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n                getStates();\n            })\n            .catch((err) => {\n                dispatch({type: 'SET_DEFAULT_STATE_FAILURE', payload: {error: err}});\n                setShowDefault(false);\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const handleDelete = () => {\n        dispatch({type: 'DELETE_STATE'});\n         apiRequest(`${deleteState}/${currentState.id}`, 'delete')\n            .then((res) => {\n                dispatch({type: 'DELETE_STATE_SUCCESS', payload: {response: res}});\n                setShowModal(false);\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n                getStates();\n            })\n            .catch((err) => {\n                dispatch({type: 'DELETE_STATE_FAILURE', payload: {error: err}});\n                setShowModal(false);\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const triggerDelete = (state) => {\n        setCurrentState(state);\n        openModal();\n    }\n\n    const openModal = () => {\n        setShowModal(true);\n    }\n\n    const closeModal = () => {\n        setShowModal(false);\n    }\n\n    const triggerSetDefault = (state) => {\n        setDefaultState(state);\n        openDefault();\n    }\n\n    const openDefault = () => {\n        setShowDefault(true);\n    }\n\n    const closeDefault = () => {\n        setShowDefault(false);\n    }\n    return (\n        <div className=\"py-4 px-1 overflow-auto\">\n        <Modal\n          isOpen={showModal}\n          style={customStyles}\n          onRequestClose={closeModal}\n          contentLabel=\"Delete Modal\"\n        >\n            <div className=\"flex justify-between items-center mb-12\">\n                <p className=\"text-darkerGray font-bold text-lg\">Are you sure you want to delete {currentState?.name}?</p>\n                <button onClick={closeModal} className=\"focus:outline-none\">close</button>\n            </div>\n          \n          <div className=\"text-center my-4\">Kindly note that this action is not reversible</div>\n            <div className=\"flex justify-between items-center\">\n                <button className=\"bg-textRed py-4 px-16 text-white font-bold rounded-sm focus:outline-none\" onClick={handleDelete}>Delete</button>\n                <button className=\"border border-primary py-4 px-16 text-primary font-bold rounded-sm focus:outline-none\" onClick={closeModal}>Cancel</button>\n            </div>\n        </Modal>\n        <Modal\n          isOpen={showDefault}\n          style={customStyles}\n          onRequestClose={closeDefault}\n          contentLabel=\"Set Default Modal\"\n        >\n            <div className=\"flex justify-between items-center mb-12\">\n                <p className=\"text-darkerGray font-bold text-lg\">Are you sure you want to make {defaultState?.name} the default state?</p>\n                <button onClick={closeDefault} className=\"focus:outline-none\">close</button>\n            </div>\n            <div className=\"flex justify-between items-center\">\n                <button className=\"bg-primary py-4 px-16 text-white font-bold rounded-sm focus:outline-none\" onClick={handleDefaultState}>Confirm</button>\n                <button className=\"border border-primary py-4 px-16 text-primary font-bold rounded-sm focus:outline-none\" onClick={closeDefault}>Cancel</button>\n            </div>\n        </Modal>\n            <div className=\"table\">\n                <div className=\"table-header\">\n                    <div className=\"custom-table-row w-full flex\">\n                        <div className=\"table-header-data w-2/10\">Name</div>\n                        <div className=\"table-header-data w-2/10\">Number of LGAs</div>\n                        <div className=\"table-header-data w-2/10\">Map</div>\n                        <div className=\"table-header-data w-2/10\">Default State</div>\n                        <div className=\"table-header-data w-2/10\"></div>\n                    </div>\n                    \n                </div>\n                {loading ? \n                <div className=\"flex justify-center my-6\">\n                        <Loader />\n                    </div>:\n                <div className=\"table-body\">\n                    {states.length > 0 ? states.map((state) => (<div key={state.id} className=\"custom-table-row w-full flex\">\n                        <div className=\"table-row-data w-2/10\">{state.name}</div>\n                        <div className=\"table-row-data w-2/10\">{state.lgas}</div>\n                        <div className=\"table-row-data w-2/10\">\n                            <img src={state.svgUrl ? `${baseUrl}/api/v${version}${state.svgUrl}`: Map} alt=\"state map\" width=\"38px\" height=\"41px\"/>\n                        </div>\n                        <div className=\"table-row-data w-2/10\">\n                            <input type=\"radio\" id={`stateRadio_${state.id}`}\n                                name={`defaultState_${state.id}`} value={state.defaultState} checked={state.defaultState} onChange={() => triggerSetDefault(state)} />\n                        </div>\n                        <div className=\"table-row-data w-2/10\"> \n                            <span data-tip data-for={`ellipsis-state-${state.id}`} data-event='click'>\n                                <Ellipsis />\n                            </span>\n                            <ReactTooltip id={`ellipsis-state-${state.id}`} place=\"bottom\" type=\"light\" effect=\"solid\" border borderColor=\"#979797\" clickable={true}>\n                                <Link to={{pathname: `/territories/states/${state.id}`, state: {state: state}}} className=\"text-sm text-darkerGray block text-left\">Edit</Link>\n                                <button onClick={()=>triggerDelete(state)} className=\"text-sm text-textRed block text-left focus:outline-none\">Delete</button>\n                            </ReactTooltip>\n                        </div>\n                    </div>))\n                    : <div className=\"table-row-data w-full text-center my-4\">There are no states to display</div>\n                    }\n                </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default StateList;\n",["300","301"],"/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/StackedChart.js",["302","303","304","305","306"],"/Users/user/Documents/gig/sr-tool/src/Pages/ResultDashboard/components/BarChart.js",["307","308","309","310","311","312","313","314","315","316","317"],"import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { commaSeparateNumber } from '../../../helpers/utils';\n\nconst BarChart = ({data}) => {\n    const yRef = useRef(\"yAxis\");\n    console.log('var', data)\n    // const [data, setData] = useState(partyResults);\n    // let data = [{\n    //             \"name\": \"PDP\",\n    //             \"value\": 20,\n    //     },\n    //         {\n    //             \"name\": \"APC\",\n    //             \"value\": 12,\n    //     },\n    //         {\n    //             \"name\": \"ANPP\",\n    //             \"value\": 19,\n    //     },\n    // ]\n\n    // let data = [{\n    //     politicalParty: {\n    //         percent: 42.52400548696845,\n    //         politicalParty: {\n    //             code: \"PDP\", \n    //             name: \"People's Democratic Party Thanks\", \n    //             id: 2\n    //         },\n    //         resultPerParty: null,\n    //         totalVoteCount: 31000\n    //     }\n    // },\n    // {\n    //     politicalParty: {\n    //         percent: 57.47599451303155,\n    //         politicalParty: {\n    //             code: \"APC\", \n    //             name: \"HayPeeCee\", \n    //             id: 3\n    //         },\n    //         resultPerParty: null,\n    //         totalVoteCount: 41900\n    //     }\n    // }]\n    const margin = {\n        top: 8,\n        right: 25,\n        bottom: 8,\n        left: 60\n    };\n    var rectHeight = 31;\n    const width = 414 - margin.left - margin.right;\n    const height = (rectHeight + margin.top + margin.bottom) * data.length ;\n    data = data.sort((a, b) =>  d3.ascending(a.totalVoteCount, b.totalVoteCount));\n    const x = d3.scaleLinear()\n        .range([0, width-100])\n        .domain([0, d3.max(data, d => d.totalVoteCount)]);\n\n    const y = d3.scaleBand()\n        .domain(data.map(d => d?.politicalParty?.code))\n        .rangeRound([height, 0])\n        .paddingInner(0.375);\n    //sort bars based on value\n\n    const percentege = (num) => {\n        let sum = 0;\n        for(let i = 0; i < data.length; ++i) {\n            sum += data[i].totalVoteCount;\n        }\n        let result = (num/sum) * 100;\n        return result.toFixed(2);\n    }\n\n    const parties = {\n        'PDP': '#ff0000',\n        'APC': '#00b0f0',\n        'ANPP': '#eb5e00'\n    }\n\n\n    //set up svg using margin conventions - we'll need plenty of room on the left for labels\n    \n\n    const ref = (svg) => {\n        var width = 414 - margin.left - margin.right,\n        height = (rectHeight + margin.top + margin.bottom) * data.length ;\n\n    // var svg = d3.select(\"#graphic\").append(\"svg\")\n    //     .attr(\"width\", width + margin.left + margin.right)\n    //     .attr(\"height\", height + margin.top + margin.bottom)\n    //     .append(\"g\")\n    //     .attr('transform', `translate(${margin.left},${margin.top})`);\n\n\n    //make y axis to show bar names\n    var yAxis = d3.axisLeft(y)\n        .tickSize(0);\n\n    var gy = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n\n    var bars = svg.selectAll(\".bar\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n\n    // append rects\n    bars = (rect) =>\n        rect.attr(\"class\", \"bar\")\n            .attr(\"y\", function (d) {\n                return y(d?.politicalParty?.code);\n            })\n            .attr(\"height\", y.bandwidth())\n            .attr(\"x\", 0)\n            .attr(\"width\", function (d) {\n                return x(d.totalVoteCount);\n            })\n            .attr(\"fill\", function (d) {\n                return parties[d?.politicalParty?.code];\n            })\n            .call((text) => \n                text        .attr(\"class\", \"label\")\n                //y position of the label is halfway down the bar\n                .attr(\"y\", function (d) {\n                    return y(d?.politicalParty?.code) + y.bandwidth() / 2 + 4;\n                })\n                //x position is 3 pixels to the right of the bar\n                .attr(\"x\", function (d) {\n                    return x(d.totalVoteCount) + 3;\n                })\n                .text(function (d) {\n                    return d.totalVoteCount;\n                })\n            )\n\n    //add a value label to the right of each bar\n    // bars.append(\"text\")\n    //     .attr(\"class\", \"label\")\n    //     //y position of the label is halfway down the bar\n    //     .attr(\"y\", function (d) {\n    //         return y(d?.politicalParty?.code) + y.bandwidth() / 2 + 4;\n    //     })\n    //     //x position is 3 pixels to the right of the bar\n    //     .attr(\"x\", function (d) {\n    //         return x(d.value) + 3;\n    //     })\n    //     .text(function (d) {\n    //         return d.value;\n    //     });\n    }\n\n    \n\n    return (\n        <div id=\"graphic\">\n            <svg\n                width = {width + margin.left + margin.right}\n                height = {height + margin.top + margin.bottom}\n            >\n                {/* <g fill=\"none\" fontSize=\"1rem\" fontFamily=\"GelionBold\" textAnchor=\"end\">\n                    <path d=\"M0.5,141.5V0.5\" stroke=\"#000\" />\n                    {\n                        data.map(d => )\n                    }\n                </g> */}\n                {\n                    data.map(d => \n                        <g key={d.id }>\n                            {/* <g fill=\"#000\" fontSize=\"1rem\" fontFamily=\"GelionBold\" textAnchor=\"end\"> */}\n                                {d.totalVoteCount > 0 && <text y={y(d?.politicalParty?.code) + y.bandwidth() / 2 + 4} x={16} >{d?.politicalParty?.code}</text>}\n                            {/* </g> */}\n                            \n                            {d.totalVoteCount > 0 && <rect className=\"bar\" width={x(d.totalVoteCount)} height={y.bandwidth()} y={y(d?.politicalParty?.code)} x={60} fill={parties[d?.politicalParty?.code]}/>}\n                            {d.totalVoteCount > 0 && <text y={y(d?.politicalParty?.code) + y.bandwidth() / 2 + 4} x={x(d.totalVoteCount) + 70} >{commaSeparateNumber(d.totalVoteCount)} {`(${d?.percent ? d.percent.toFixed(2) : 0}%)`}</text>}\n                        </g>\n                    )\n                }\n            </svg>\n        </div>\n    );\n}\n\nexport default BarChart;","/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/index.js",["318","319","320","321","322","323","324","325","326","327","328"],"/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/index.js",["329","330","331","332"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"react-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../../shared/Layout\";\nimport {allLgas, filterLgaByName, uploadLga} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport LgaList from \"./LgaList\";\nimport { LgaContext, LgaController } from \"../../contexts/LgaContext\";\nimport Uploader from \"../../shared/components/Uploader\";\nimport Downloader from \"../../shared/components/Downloader\";\nimport pickBy from 'lodash/pickBy'\nimport Pagination from \"../../shared/components/Pagination\";\n\nconst Lgas = ({match, location}) => {\n    const [search, setSearch] = useState('');\n    const [lgaState, dispatch] = useContext(LgaContext);\n    const [filter, setFilter] = useState({senatorialDistrict: '', state: ''});\n    const [districts, setDistricts] = useState([]);\n    const [states, setStates] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentLgas, setCurrentLgas] = useState([]);\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n    }\n\n    const headers = [\n        { label: 'Local Government Area', key: 'name' },\n        { label: 'Senatorial District', key: 'senatorialDistrict.name' },\n        { label: 'State', key: 'state.name' },\n        { label: 'Number', key: 'code' }\n    ];\n\n    const filterData = (e) => {\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        setFilter({...filter, [name]: value})\n        let query = pickBy(filter);\n        if(Object.keys(query).length) { dispatch({type: 'GET_LGAS'});\n        //  setSubmitting(true);\n         apiRequest(allLgas, 'get', {params: query})\n            .then((res) => {\n                dispatch({type: 'GET_LGAS_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_LGAS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n                // setSubmitting(false);\n            });\n        }\n    }\n\n    const handleSearch = () => {\n        dispatch({type: 'SEARCH_LGA_BY_NAME'});\n         apiRequest(filterLgaByName, 'get', {params: {name: search}})\n            .then((res) => {\n                dispatch({type: 'SEARCH_LGA_BY_NAME_SUCCESS', payload: {response: res}});\n                setCurrentLgas(res.lgas.slice(0, 11));\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n            })\n            .catch((err) => {\n                dispatch({type: 'SEARCH_LGA_BY_NAME_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const onPageChanged = data => {\n        const allLgas = lgaState.lgas;\n        const { currentPage, pageLimit } = data;\n        const offset = (currentPage - 1) * pageLimit;\n        const lgas = allLgas?.slice(offset, offset + pageLimit);\n        setCurrentPage(currentPage);\n        setCurrentLgas(lgas);\n    }\n\n    const getAllLgas = () => {\n        dispatch({type: 'GET_LGAS'});\n         apiRequest(allLgas, 'get')\n            .then((res) => {\n                dispatch({type: 'GET_LGAS_SUCCESS', payload: {response: res}});\n                setCurrentLgas(res.lgas.slice(0, 11));\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`)\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_LGAS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    useEffect(() => {\n        getAllLgas();\n    }, []);\n\n    return (\n        <LgaController>\n            <Layout location={location}>\n                <Breadcrumbs className=\"shadow-container w-full lg:px-3.5 px-1 pt-7 pb-5 rounded-sm text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Election Territories',\n                pathname: \"/territories\"}, {id: 2,title: 'Lgas',\n                pathname: match.path}]}/>\n                <div className=\"my-6 shadow-container pl-2.5 lg:pr-7 pr-2.5 py-6\">\n                    <div className=\"lg:flex justify-between items-center px-1\">\n                        <div className=\"xl:w-3/10 lg:w-6/10 flex items-center px-1 w-full\">\n                            <select \n                                name=\"state\" \n                                onChange={filterData}\n                                onBlur={filterData}\n                                value={filter.state}\n                                className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm mr-4\"\n                            >\n                                <option value='' disabled>State</option>\n                                {states.map(state => (<option key={state.id} value={state.code}>{state.name}</option>))}\n                            </select>\n                            <select \n                                name=\"senatorialDistrict\" \n                                onChange={filterData}\n                                onBlur={filterData}\n                                value={filter.senatorialDistrict}\n                                className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                            >\n                                <option value='' disabled>Senatorial District</option>\n                                {districts.map(district => (<option key={district.id} value={district.code}>{district.name}</option>))}\n                            </select>\n                        </div>\n                        <div className=\"xl:w-2/10 lg:w-3/10 flex items-center lg:justify-end px-1 w-full lg:mt-0 mt-4\">\n                        <Link className=\"bg-primary py-3.5 px-16 add-btn text-white font-bold rounded-sm\" to=\"/territories/lgas/create\">\n                            Add Lga\n                        </Link>\n                        </div>\n                    </div>\n                    <div className=\"w-full flex mt-16 items-center px-1\">\n                        <div className=\"w-1/2\">\n                            <input className=\"border border-primary rounded-sm w-9.5/10 py-3 px-2 focus:outline-none\" name=\"search\" type=\"text\" value={search} onChange={handleChange} placeholder=\"Search lgas by name\"/>\n                        </div>\n                        <div className=\"w-1/2\">\n                            <button disabled={search.length < 1} className=\"bg-primary button-padding py-3.5 text-white font-bold rounded-lg focus:outline-none\" onClick={handleSearch}>\n                                search\n                            </button>\n                        </div>\n                    </div>\n                    <LgaList lgas={currentLgas} loading={lgaState.loading} getLgas={getAllLgas}/>\n                    {!lgaState.loading && <div className=\"flex justify-between items-center mt-4\">\n                        <div className=\"flex\">\n                            <Uploader dispatch={dispatch} action=\"UPLOAD_LGA\" action_success=\"UPLOAD_LGA_SUCCESS\" action_error=\"UPLOAD_LGA_FAILURE\" url={uploadLga} refresh={getAllLgas}/>\n                            {lgaState.response?.lgas?.length > 0 && <Downloader dispatch={dispatch} action=\"DOWNLOAD_LGA_SUCCESS\" headers={headers} data={lgaState.response?.lgas || []} filename={'lgas.csv'} /> }\n                        </div>\n                        {lgaState.response?.lgas?.length > 0 && <div>\n                            <Pagination totalRecords={lgaState.response?.lgas?.length} pageLimit={10} pageNeighbours={2} onPageChanged={onPageChanged} />\n                        </div>}\n                    </div>}\n                </div>\n            </Layout>\n        </LgaController>\n    );\n}\n\nexport default Lgas;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/index.js",["333","334","335","336","337","338"],"/Users/user/Documents/gig/sr-tool/src/Pages/Wards/WardList.js",["339"],"/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/BarChart.js",["340","341","342","343","344","345","346"],"import React, { useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst BarChart = () => {\n    const yRef = useRef(\"yAxis\");\n    let data = [{\n                \"name\": \"PDP\",\n                \"value\": 20,\n        },\n            {\n                \"name\": \"APC\",\n                \"value\": 12,\n        },\n            {\n                \"name\": \"ANPP\",\n                \"value\": 19,\n        },\n    ]\n    const margin = {\n        top: 8,\n        right: 25,\n        bottom: 8,\n        left: 60\n    };\n    //sort bars based on value\n    data = data.sort(function (a, b) {\n        return d3.ascending(a.value, b.value);\n    })\n    var rectHeight = 31;\n    const width = 414 - margin.left - margin.right;\n    const height = (rectHeight + margin.top + margin.bottom) * data.length ;\n    const x = d3.scaleLinear()\n        .range([0, width-100])\n        .domain([0, d3.max(data, d => d.value)]);\n\n    const y = d3.scaleBand()\n        .domain(data.map(d => d.name))\n        .rangeRound([height, 0])\n        .paddingInner(0.375)\n\n    const percentege = (num) => {\n        let sum = 0;\n        for(let i = 0; i < data.length; ++i) {\n            sum += data[i].value;\n        }\n        let result = (num/sum) * 100;\n        return result.toFixed(2);\n    }\n\n    const parties = {\n        'PDP': '#ff0000',\n        'APC': '#00b0f0',\n        'ANPP': '#eb5e00'\n    }\n\n\n    //set up svg using margin conventions - we'll need plenty of room on the left for labels\n    \n\n    const ref = (svg) => {\n        var width = 414 - margin.left - margin.right,\n        height = (rectHeight + margin.top + margin.bottom) * data.length ;\n\n    // var svg = d3.select(\"#graphic\").append(\"svg\")\n    //     .attr(\"width\", width + margin.left + margin.right)\n    //     .attr(\"height\", height + margin.top + margin.bottom)\n    //     .append(\"g\")\n    //     .attr('transform', `translate(${margin.left},${margin.top})`);\n\n\n    //make y axis to show bar names\n    var yAxis = d3.axisLeft(y)\n        .tickSize(0);\n\n    var gy = svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n\n    var bars = svg.selectAll(\".bar\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n\n    // append rects\n    bars = (rect) =>\n        rect.attr(\"class\", \"bar\")\n            .attr(\"y\", function (d) {\n                return y(d.name);\n            })\n            .attr(\"height\", y.bandwidth())\n            .attr(\"x\", 0)\n            .attr(\"width\", function (d) {\n                return x(d.value);\n            })\n            .attr(\"fill\", function (d) {\n                return parties[d.name];\n            })\n            .call((text) => \n                text        .attr(\"class\", \"label\")\n                //y position of the label is halfway down the bar\n                .attr(\"y\", function (d) {\n                    return y(d.name) + y.bandwidth() / 2 + 4;\n                })\n                //x position is 3 pixels to the right of the bar\n                .attr(\"x\", function (d) {\n                    return x(d.value) + 3;\n                })\n                .text(function (d) {\n                    return d.value;\n                })\n            )\n\n    //add a value label to the right of each bar\n    // bars.append(\"text\")\n    //     .attr(\"class\", \"label\")\n    //     //y position of the label is halfway down the bar\n    //     .attr(\"y\", function (d) {\n    //         return y(d.name) + y.bandwidth() / 2 + 4;\n    //     })\n    //     //x position is 3 pixels to the right of the bar\n    //     .attr(\"x\", function (d) {\n    //         return x(d.value) + 3;\n    //     })\n    //     .text(function (d) {\n    //         return d.value;\n    //     });\n    }\n\n    \n\n    return (\n        <div id=\"graphic\">\n            <svg\n                width = {width + margin.left + margin.right}\n                height = {height + margin.top + margin.bottom}\n            >\n                {/* <g fill=\"none\" fontSize=\"1rem\" fontFamily=\"GelionBold\" textAnchor=\"end\">\n                    <path d=\"M0.5,141.5V0.5\" stroke=\"#000\" />\n                    {\n                        data.map(d => )\n                    }\n                </g> */}\n                {\n                    data.map(d => \n                        <>\n                            {/* <g fill=\"#000\" fontSize=\"1rem\" fontFamily=\"GelionBold\" textAnchor=\"end\"> */}\n                                <text y={y(d.name) + y.bandwidth() / 2 + 4} x={16} >{d.name}</text>\n                            {/* </g> */}\n                            \n                            <rect className=\"bar\" width={x(d.value)} height={y.bandwidth()} y={y(d.name)} x={60} fill={parties[d.name]}/>\n                            <text y={y(d.name) + y.bandwidth() / 2 + 4} x={x(d.value) + 70} >{d.value} {`(${percentege(d.value)}%)`}</text>\n                        </>\n                    )\n                }\n            </svg>\n        </div>\n    );\n}\n\nexport default BarChart;","/Users/user/Documents/gig/sr-tool/src/shared/AuthenticatedRoute.js",["347"],"import React, {useEffect, useContext} from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { AuthContext } from '../contexts/AuthContext';\n\nconst AuthenticatedRoute = ({component: Component, isLoggedIn, ...rest}) => {\n  const [userState, dispatch] = useContext(AuthContext);\n  useEffect(() => {\n    // if(!userState.isLoggedIn) localStorage.multiRemove(['user', 'access_token']);\n    if(!userState.isLoggedIn){\n      localStorage.clear();\n    }\n  }, [userState.isLoggedIn])\n  return (\n    <Route\n      {...rest}\n      render={\n        (props) => userState.isLoggedIn === true\n            ? <Component {...props} />\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n    />\n  )\n}\n\nexport default AuthenticatedRoute;","/Users/user/Documents/gig/sr-tool/src/Pages/Login/Login.js",["348"],"/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/index.js",["349","350","351","352","353"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"react-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../../shared/Layout\";\nimport {allIncidents, uploadIncident} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport Uploader from \"../../shared/components/Uploader\";\nimport Downloader from \"../../shared/components/Downloader\";\nimport pickBy from 'lodash/pickBy';\nimport Pagination from \"../../shared/components/Pagination\";\nimport { IncidentContext } from \"../../contexts/IncidentContext\";\nimport IncidentList from \"./IncidentList\";\n\nconst Incidents = ({match, location}) => {\n    const [search, setSearch] = useState('');\n    const [incidentState, dispatch] = useContext(IncidentContext);\n    const [filter, setFilter] = useState({lga: '', ward: '', pollingUnit: ''});\n    const [lgas, setLgas] = useState([]);\n    const [wards, setWards] = useState([]);\n    const [pollingUnits, setPollingUnits] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentIncidents, setCurrentIncidents] = useState([]);\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n    }\n\n    const headers = [\n        { label: 'Incident Type', key: 'incidentType.name' },\n        { label: 'Incident Status', key: 'incidentStatus.name' },\n        { label: 'Local Government Area', key: 'lga.name' },\n        { label: 'Ward', key: 'ward.name' },\n        { label: 'Polling Unit', key: 'pollingUnit.name' },\n        { label: 'Location', key: 'reportedLocation' },\n        { label: 'Phone number to contact', key: 'phoneNumberToContact' }\n    ];\n\n    const filterData = (e) => {\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        setFilter({...filter, [name]: value})\n        let query = pickBy(filter);\n        if(Object.keys(query).length) { dispatch({type: 'GET_INCIDENTS'});\n        //  setSubmitting(true);\n         apiRequest(allIncidents, 'get', {params: query})\n            .then((res) => {\n                dispatch({type: 'GET_INCIDENTS_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_INCIDENTS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n                // setSubmitting(false);\n            });\n        }\n    }\n\n    const handleSearch = () => {\n        dispatch({type: 'SEARCH_INCIDENT_BY_NAME'});\n        //  setSubmitting(true);\n         apiRequest(allIncidents, 'get', {params: {code: search}})\n            .then((res) => {\n                dispatch({type: 'SEARCH_INCIDENT_BY_NAME_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'SEARCH_INCIDENT_BY_NAME_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n                // setSubmitting(false);\n            });\n    }\n\n    const onPageChanged = data => {\n        const allIncidents = incidentState.incidents;\n        const { currentPage, pageLimit } = data;\n        const offset = (currentPage - 1) * pageLimit;\n        const incidents = allIncidents?.slice(offset, offset + pageLimit);\n        setCurrentPage(currentPage);\n        setCurrentIncidents(incidents);\n    }\n\n    const getAllIncidents = () => {\n        dispatch({type: 'GET_INCIDENTS'});\n         apiRequest(allIncidents, 'get')\n            .then((res) => {\n                dispatch({type: 'GET_INCIDENTS_SUCCESS', payload: {response: res}});\n                setCurrentIncidents(res.incidents);\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`)\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_INCIDENTS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    useEffect(() => {\n        getAllIncidents();\n    }, []);\n\n    return (\n        <Layout location={location}>\n            <Breadcrumbs className=\"shadow-container w-full lg:px-3.5 px-1 pt-7 pb-5 rounded-sm text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Incidents',\n            pathname: match.path}]}/>\n            <div className=\"my-6 shadow-container pl-2.5 lg:pr-7 pr-2.5 py-6\">\n                <div className=\"lg:flex justify-between items-center px-1\">\n                    <div className=\"xl:w-4.5/10 lg:w-6/10 flex items-center px-1 w-full\">\n                        <select \n                            name=\"lga\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.lga}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                        >\n                            <option value='' disabled>All Lgas</option>\n                            {lgas.map(lga => (<option key={lga.id} value={lga.code}>{lga.name}</option>))}\n                        </select>\n                        <select \n                            name=\"ward\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.ward}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm mx-4\"\n                        >\n                            <option value='' disabled>All Wards</option>\n                            {wards.map(ward => (<option key={ward.id} value={ward.code}>{ward.name}</option>))}\n                        </select>\n                        <select \n                            name=\"pollingUnit\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.pollingUnit}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                        >\n                            <option value='' disabled>All Polling Units</option>\n                            {pollingUnits.map(pollingUnit => (<option key={pollingUnit.id} value={pollingUnit.code}>{pollingUnit.name}</option>))}\n                        </select>\n                    </div>\n                    <div className=\"xl:w-2/10 lg:w-3/10 flex items-center lg:justify-end px-1 w-full lg:mt-0 mt-4\">\n                    <Link className=\"bg-primary py-4 px-16 text-white font-bold rounded-sm\" to=\"/incidents/create\">\n                        Add Incident\n                    </Link>\n                    </div>\n                </div>\n                <div className=\"w-full flex mt-16 items-center px-1\">\n                    <div className=\"w-1/2\">\n                        <input className=\"border border-primary rounded-sm w-9.5/10 py-3 px-2 focus:outline-none\" name=\"search\" type=\"text\" value={search} onChange={handleChange} placeholder=\"Search incidents by name\"/>\n                    </div>\n                    <div className=\"w-1/2\">\n                        <button disabled={search.length < 1} className=\"bg-primary button-padding py-3.5 text-white font-bold rounded-lg focus:outline-none\" onClick={handleSearch}>\n                            search\n                        </button>\n                    </div>\n                </div>\n                <IncidentList incidents={currentIncidents} loading={incidentState.loading} getIncidents={getAllIncidents}/>\n                {!incidentState.loading && <div className=\"flex justify-between items-center mt-4\">\n                    <div className=\"flex\">\n                        <Uploader dispatch={dispatch} action=\"UPLOAD_INCIDENT\" action_success=\"UPLOAD_INCIDENT_SUCCESS\" action_error=\"UPLOAD_INCIDENT_FAILURE\" url={uploadIncident} refresh={getAllIncidents}/>\n                        {incidentState.incidents?.length > 0 && <Downloader dispatch={dispatch} action=\"DOWNLOAD_INCIDENTS_SUCCESS\" headers={headers} data={incidentState.incidents || []} location={location} filename={'election_incidents.csv'} />}\n                    </div>\n                    {incidentState.incidents?.length > 0 && <div>\n                        <Pagination totalRecords={incidentState.incidents.length} pageLimit={10} pageNeighbours={2} onPageChanged={onPageChanged} />\n                    </div>}\n                </div>}\n            </div>\n        </Layout>\n    );\n}\n\nexport default Incidents;\n","/Users/user/Documents/gig/sr-tool/src/shared/components/Pagination.js",["354","355","356","357","358","359","360"],"import React, { useEffect, useState } from 'react';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  console.log(range)\n  return range;\n}\n\nconst Pagination = ({totalRecords = null, pageLimit = 30, pageNeighbours = 0, onPageChanged}) => {\n    const [currentPage, setCurrentPage] =  useState(1);\n    pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n    let allPages = Math.ceil(totalRecords / pageLimit);\n    pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n    const fetchPageNumbers = () => {\n        const totalPages = allPages;\n        const current = currentPage;\n        const neighbours = pageNeighbours;\n\n        /**\n         * totalNumbers: the total page numbers to show on the control\n         * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n         */\n        const totalNumbers = (neighbours * 2) + 1;\n        const totalBlocks = totalNumbers + 2;\n\n        if (totalPages > totalBlocks) {\n        const startPage = Math.max(2, current - neighbours);\n        const endPage = Math.min(totalPages - 1, current + neighbours);\n        let pages = range(startPage, endPage);\n\n        /**\n         * hasLeftSpill: has hidden pages to the left\n         * hasRightSpill: has hidden pages to the right\n         * spillOffset: number of hidden pages either to the left or to the right\n         */\n        const hasLeftSpill = startPage > 2;\n        const hasRightSpill = (totalPages - endPage) > 1;\n        const spillOffset = totalNumbers - (pages.length + 1);\n\n        switch (true) {\n            // handle: < (1) {5 6} [7] {8 9} (10)\n            case (hasLeftSpill && !hasRightSpill): {\n                const extraPages = range(startPage - spillOffset, startPage - 1);\n                pages = [LEFT_PAGE, ...extraPages, ...pages];\n                break;\n            }\n\n            // handle: (1) {2 3} [4] {5 6} (10) >\n            case (!hasLeftSpill && hasRightSpill): {\n                const extraPages = range(endPage + 1, endPage + spillOffset);\n                pages = [...pages, ...extraPages, RIGHT_PAGE];\n                break;\n            }\n\n            // handle:  < (1) {4 5} [6] {7 8} (10) >\n            case (hasLeftSpill && hasRightSpill): \n            default: {\n                const left = [];\n                const right = [];\n                pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n                break;\n            }\n        }\n\n        return [1, ...pages, totalPages];\n        }\n\n        return range(1, totalPages);\n    }\n\n    const gotoPage = page => {\n        // const { onPageChanged = f => f } = this.props;\n        const currentPage = Math.max(0, Math.min(page, allPages));\n        setCurrentPage(currentPage);\n\n        // this.setState({ currentPage }, () => onPageChanged(paginationData));\n    }\n\n    useEffect(() => {\n        const paginationData = {\n            currentPage,\n            allPages,\n            pageLimit,\n            totalRecords\n        };\n        onPageChanged(paginationData);\n    }, [currentPage]);\n\n    const handleClick = page => evt => {\n        evt.preventDefault();\n        gotoPage(page);\n    }\n\n    const handleMoveLeft = evt => {\n        evt.preventDefault();\n        gotoPage(currentPage - (pageNeighbours * 2) - 1);\n    }\n\n    const handleMoveRight = evt => {\n        evt.preventDefault();\n        gotoPage(currentPage + (pageNeighbours * 2) + 1);\n    }\n\n    const pages = fetchPageNumbers();\n    return (\n        <>\n        <nav aria-label=\"Pagination\" className=\"flex items-center\">\n        <button className=\"bg-primary px-4 py-2 text-white focus:outline-none rounded-sm\" onClick={() => gotoPage(currentPage - 1)} disabled={currentPage <= 1}>Previous</button>\n          <ul className=\"pagination flex\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item bg-primary px-4 py-2 border border-primary mx-4 text-white focus:outline-none rounded-sm\">\n                  <a className=\"page-link py-3 px-5\" href=\"#\" aria-label=\"Previous\" onClick={handleMoveLeft}>\n                    <span aria-hidden=\"true\">&hellip;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item bg-primary px-4 py-2 border border-primary mx-4 text-white focus:outline-none rounded-sm\">\n                  <a className=\"page-link py-3 px-5\" href=\"#\" aria-label=\"Next\" onClick={handleMoveRight}>\n                    <span aria-hidden=\"true\">&hellip;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item ${ currentPage === page ? 'bg-white text-primary' : 'bg-primary text-white'} text-center w-12 py-2 border border-primary rounded-sm mx-4 focus:outline-none`}>\n                  <a className=\"page-link py-3 px-5\" href=\"#\" onClick={handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        <button className=\"bg-primary px-4 py-2 text-white focus:outline-none rounded-sm\" onClick={() => gotoPage(currentPage + 1)} disabled={currentPage == allPages}>Next</button>\n        </nav>\n      </>\n    )\n}\n\nexport default Pagination;\n","/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/index.js",["361","362","363","364","365"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"react-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../../shared/Layout\";\nimport {allPollingUnits, filterPollingUnitByName, uploadPollingUnit} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport Uploader from \"../../shared/components/Uploader\";\nimport Downloader from \"../../shared/components/Downloader\";\nimport pickBy from 'lodash/pickBy'\nimport WardList from \"./PollingUnitList\";\nimport { PUContext } from \"../../contexts/PollingUnitContext\";\nimport Pagination from \"../../shared/components/Pagination\";\n\nconst PollingUnits = ({match, location}) => {\n    const [search, setSearch] = useState('');\n    const [puState, dispatch] = useContext(PUContext);\n    const [filter, setFilter] = useState({senatorialDistrict: '', state: '', lga: ''});\n    const [districts, setDistricts] = useState([]);\n    const [states, setStates] = useState([]);\n    const [lgas, setLgas] = useState([]);\n    const [currentPollingUnits, setCurrentPollingUnits] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const headers = [\n        { label: 'Polling Unit', key: 'name' },\n        { label: 'Ward', key: 'ward.name' },\n        { label: 'Local Government Area', key: 'lga.name' },\n        { label: 'Senatorial District', key: 'senatorialDistrict.name' },\n        { label: 'State', key: 'state.name' },\n        { label: 'Number', key: 'code' }\n    ];\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n    }\n\n    const filterData = (e) => {\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        setFilter({...filter, [name]: value})\n        let query = pickBy(filter);\n        if(Object.keys(query).length) { dispatch({type: 'GET_POLLING_UNITS'});\n        //  setSubmitting(true);\n         apiRequest(allPollingUnits, 'get', {params: query})\n            .then((res) => {\n                dispatch({type: 'GET_POLLING_UNITS_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_POLLING_UNITS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n                // setSubmitting(false);\n            });\n        }\n    }\n\n    const handleSearch = () => {\n        dispatch({type: 'SEARCH_POLLING_UNIT_BY_NAME'});\n         apiRequest(filterPollingUnitByName, 'get', {params: {name: search}})\n            .then((res) => {\n                dispatch({type: 'SEARCH_POLLING_UNIT_BY_NAME_SUCCESS', payload: {response: res}});\n                setCurrentPollingUnits(res.pollingUnits.slice(0, 11));\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n            })\n            .catch((err) => {\n                dispatch({type: 'SEARCH_POLLING_UNIT_BY_NAME_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const onPageChanged = data => {\n        const allPollingUnits = puState.pollingUnits;\n        const { currentPage, pageLimit } = data;\n        const offset = (currentPage - 1) * pageLimit;\n        const pollingUnits = allPollingUnits?.slice(offset, offset + pageLimit);\n        setCurrentPage(currentPage);\n        setCurrentPollingUnits(pollingUnits);\n    }\n\n    const getAllPollingUnits = () => {\n        dispatch({type: 'GET_POLLING_UNITS'});\n         apiRequest(allPollingUnits, 'get')\n            .then((res) => {\n                dispatch({type: 'GET_POLLING_UNITS_SUCCESS', payload: {response: res}});\n                setCurrentPollingUnits(res.pollingUnits.slice(0, 11));\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`)\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_POLLING_UNITS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    useEffect(() => {\n        getAllPollingUnits();\n    }, []);\n\n    return (\n        <Layout location={location}>\n            <Breadcrumbs className=\"shadow-container w-full lg:px-3.5 px-1 pt-7 pb-5 rounded-sm text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Election Territories',\n            pathname: \"/territories\"}, {id: 2,title: 'Polling Units',\n            pathname: match.path}]}/>\n            <div className=\"my-6 shadow-container pl-2.5 lg:pr-7 pr-2.5 py-6\">\n                <div className=\"lg:flex justify-between items-center px-1\">\n                    <div className=\"xl:w-4.5/10 lg:w-6/10 flex items-center px-1 w-full\">\n                        <select \n                            name=\"state\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.state}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                        >\n                            <option value='' disabled>State</option>\n                            {states.map(state => (<option key={state.id} value={state.code}>{state.name}</option>))}\n                        </select>\n                        <select \n                            name=\"senatorialDistrict\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.senatorialDistrict}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm mx-4\"\n                        >\n                            <option value='' disabled>Senatorial District</option>\n                            {districts.map(district => (<option key={district.id} value={district.code}>{district.name}</option>))}\n                        </select>\n                        <select \n                            name=\"lga\" \n                            onChange={filterData}\n                            onBlur={filterData}\n                            value={filter.lga}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                        >\n                            <option value='' disabled>LGA</option>\n                            {lgas.map(lga => (<option key={lga.id} value={lga.code}>{lga.name}</option>))}\n                        </select>\n                    </div>\n                    <div className=\"xl:w-2/10 lg:w-3/10 flex items-center lg:justify-end px-1 w-full lg:mt-0 mt-4\">\n                    <Link className=\"bg-primary py-3.5 px-16 text-white font-bold rounded-sm\" to=\"/territories/polling-units/create\">\n                        Add Polling Unit\n                    </Link>\n                    </div>\n                </div>\n                <div className=\"w-full flex mt-16 items-center px-1\">\n                    <div className=\"w-1/2\">\n                        <input className=\"border border-primary rounded-sm w-9.5/10 py-3 px-2 focus:outline-none\" name=\"search\" type=\"text\" value={search} onChange={handleChange} placeholder=\"Search polling units by name\"/>\n                    </div>\n                    <div className=\"w-1/2\">\n                        <button disabled={search.length < 1} className=\"bg-primary button-padding py-3.5 text-white font-bold rounded-lg focus:outline-none\" onClick={handleSearch}>\n                            search\n                        </button>\n                    </div>\n                </div>\n                <WardList pollingUnits={currentPollingUnits} loading={puState.loading} getPollingUnits={getAllPollingUnits}/>\n                {!puState.loading && <div className=\"flex justify-between items-center mt-4\">\n                    <div className=\"flex\">\n                        <Uploader dispatch={dispatch} action=\"UPLOAD_POLLING_UNIT\" action_success=\"UPLOAD_POLLING_UNIT_SUCCESS\" action_error=\"UPLOAD_POLLING_UNIT_FAILURE\" url={uploadPollingUnit} refresh={getAllPollingUnits}/>\n                            {puState.response?.pollingUnits?.length > 0 && <Downloader dispatch={dispatch} action=\"DOWNLOAD_POLLING_UNIT_SUCCESS\" headers={headers} data={puState.response?.pollingUnits || []} filename={'polling_units.csv'}/>}\n                    </div>\n                    {puState.response?.pollingUnits?.length > 0 && <div>\n                        <Pagination totalRecords={puState.response?.pollingUnits?.length} pageLimit={10} pageNeighbours={2} onPageChanged={onPageChanged} />\n                    </div>}\n                </div>}\n            </div>\n        </Layout>\n    );\n}\n\nexport default PollingUnits;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/index.js",["366","367","368","369","370"],"/Users/user/Documents/gig/sr-tool/src/Pages/ElectionResults/index.js",["371","372","373","374","375","376"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Breadcrumbs } from \"react-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../../shared/Layout\";\nimport {allResults, uploadResult, filterResults, getLgasByStateId, getWardsByLgaId, getPollingUnitsByWardId} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport Uploader from \"../../shared/components/Uploader\";\nimport Downloader from \"../../shared/components/Downloader\";\nimport pickBy from 'lodash/pickBy';\nimport Pagination from \"../../shared/components/Pagination\";\nimport { ResultContext } from \"../../contexts/ResultContext\";\nimport ResultList from \"./ResultList\";\n\nconst Results = ({match, location}) => {\n    const [search, setSearch] = useState('');\n    const [resultState, dispatch] = useContext(ResultContext);\n    const [filter, setFilter] = useState({lga: '', ward: '', 'polling-unit': ''});\n    const [lgas, setLgas] = useState([]);\n    const [wards, setWards] = useState([]);\n    const [pollingUnits, setPollingUnits] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentResults, setCurrentResults] = useState([]);\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n    }\n    const headers = [\n        { label: 'Voting Level', key: 'votingLevel.name' },\n        { label: 'Senatorial District', key: 'senatorialDistrict.name' },\n        { label: 'Local Government Area', key: 'lga.name' },\n        { label: 'Ward', key: 'ward.name' },\n        { label: 'Polling Unit', key: 'pollingUnit.name' },\n        { label: 'ANPP', key: 'resultPerParties[0].voteCount' },\n        { label: 'APC', key: 'resultPerParties[1].voteCount' },\n        { label: 'Others', key: 'resultPerParties[2].voteCount' },\n        { label: 'PDP', key: 'resultPerParties[3].voteCount' },\n    ];\n\n    const filterData = (id,type) => {\n        const url = `${filterResults}/${type}`;\n        setFilter({...filter, [type]: id});\n        let query = pickBy(filter);\n        if(Object.keys(query).length) { dispatch({type: 'FILTER_RESULTS'});\n         apiRequest(`${url}/${id}`, 'get')\n            .then((res) => {\n                dispatch({type: 'FILTER_RESULTS_SUCCESS', payload: {response: res}});\n                setCurrentResults(res.results.slice(0, 11));\n            })\n            .catch((err) => {\n                dispatch({type: 'FILTER_RESULTS_FAILURE', payload: {error: err}});\n               showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`);\n            });\n        }\n    }\n\n    const handleSearch = () => {\n        dispatch({type: 'SEARCH_RESULT_BY_NAME'});\n        //  setSubmitting(true);\n         apiRequest(allResults, 'get', {params: {code: search}})\n            .then((res) => {\n                dispatch({type: 'SEARCH_RESULT_BY_NAME_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'SEARCH_RESULT_BY_NAME_FAILURE', payload: {error: err}});\n                showToast('error', 'Something went wrong. Please try again later')\n                // setSubmitting(false);\n            });\n    }\n\n    const onPageChanged = data => {\n        const allResults = resultState.results;\n        const { currentPage, pageLimit } = data;\n        const offset = (currentPage - 1) * pageLimit;\n        const results = allResults?.slice(offset, offset + pageLimit);\n        setCurrentPage(currentPage);\n        setCurrentResults(results);\n    }\n    \n    const getAllResults = () => {\n        dispatch({type: 'GET_RESULTS'});\n         apiRequest(allResults, 'get')\n            .then((res) => {\n                dispatch({type: 'GET_RESULTS_SUCCESS', payload: {response: res}});\n                setCurrentResults(res.results.slice(0, 11));\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`)\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_RESULTS_FAILURE', payload: {error: err}});\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const getLgas = (stateId = 6) => {\n        if(stateId) {apiRequest(`${getLgasByStateId}/${stateId}`, 'get')\n            .then(res => {\n                setLgas(res.lgas);\n            })\n            .catch(err => {\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            })}\n    }\n\n    const getWards = (lgaId) => {\n        if(lgaId) {apiRequest(`${getWardsByLgaId}/${lgaId}`, 'get')\n            .then(res => {\n                setWards(res.wards);\n            })\n            .catch(err => {\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            })}\n    }\n\n    const getPollingUnits = (wardId) =>{\n        if(wardId){apiRequest(`${getPollingUnitsByWardId}/${wardId}`, 'get')\n            .then((res) => {\n                setPollingUnits(res.pollingUnits)\n            })\n            .catch((err) => {\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });}\n    }\n\n    const clearFilter = () => {\n        setFilter({lga: '', ward: '', 'polling-unit': ''});\n        setSearch(\"\");\n        getAllResults();\n    }\n\n    useEffect(() => {\n        getAllResults();\n        getLgas();\n    }, []);\n\n    useEffect(() => {\n        filterData(filter.ward, 'ward');\n        getPollingUnits(filter.ward);\n    }, [filter.ward])\n\n    useEffect(() => {\n        filterData(filter.lga, 'lga');\n        getWards(filter.lga);\n    }, [filter.lga])\n\n    useEffect(() => {\n        filterData(filter['polling-unit'], 'polling-unit');\n    }, [filter['polling-unit']])\n\n    return (\n        <Layout location={location}>\n            <Breadcrumbs className=\"shadow-container w-full lg:px-3.5 px-1 pt-7 pb-5 rounded-sm text-2xl font-bold\" setCrumbs={() => [{id: 1,title: 'Results',\n            pathname: match.path}]}/>\n            <div className=\"my-6 shadow-container pl-2.5 lg:pr-7 pr-2.5 py-6\">\n                <div className=\"lg:flex justify-between items-center px-1\">\n                    <div className=\"xl:w-4.5/10 lg:w-6/10 flex items-center px-1 w-full\">\n                        <select \n                            name=\"lga\" \n                            onChange={(e) => setFilter({...filter, lga: e.target.value})}\n                            onBlur={(e) => setFilter({...filter, lga: e.target.value})}\n                            value={filter.lga}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                            disabled={resultState.loading || resultState.states?.length <= 0}\n                        >\n                            <option value='' disabled>All Lgas</option>\n                            {lgas.map(lga => (<option key={lga.id} value={lga.id}>{lga.name}</option>))}\n                        </select>\n                        <select \n                            name=\"ward\" \n                            onChange={(e) => setFilter({...filter, ward: e.target.value})}\n                            onBlur={(e) => setFilter({...filter, ward: e.target.value})}\n                            value={filter.ward}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm mx-4\"\n                            disabled={resultState.loading || !filter.lga}\n                        >\n                            <option value='' disabled>All Wards</option>\n                            {wards.map(ward => (<option key={ward.id} value={ward.id}>{ward.name}</option>))}\n                        </select>\n                        <select \n                            name=\"polling-unit\" \n                            onChange={(e) => setFilter({...filter, 'polling-unit': e.target.value})}\n                            onBlur={(e) => setFilter({...filter, 'polling-unit': e.target.value})}\n                            value={filter[\"polling-unit\"]}\n                            className=\"w-full border border-primary rounded-sm py-4 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                            disabled={resultState.loading || !filter.ward}\n                        >\n                            <option value='' disabled>All Polling Units</option>\n                            {pollingUnits.map(pollingUnit => (<option key={pollingUnit.id} value={pollingUnit.id}>{pollingUnit.name}</option>))}\n                        </select>\n                        <div className=\"cursor-pointer\" onClick={clearFilter}>clear</div>\n                    </div>\n                    <div className=\"xl:w-2/10 lg:w-3/10 flex items-center lg:justify-end px-1 w-full lg:mt-0 mt-4\">\n                    <Link className=\"bg-primary py-4 px-16 text-white font-bold rounded-sm\" to=\"/results/create\">\n                        Add Result\n                    </Link>\n                    </div>\n                </div>\n                <div className=\"w-full flex mt-16 items-center px-1\">\n                    <div className=\"w-1/2\">\n                        <input className=\"border border-primary rounded-sm w-9.5/10 py-3 px-2 focus:outline-none\" name=\"search\" type=\"text\" value={search} onChange={handleChange} placeholder=\"Search results by name\"/>\n                    </div>\n                    <div className=\"w-1/2\">\n                        <button disabled={search.length < 1} className=\"bg-primary button-padding py-3.5 text-white font-bold rounded-lg focus:outline-none\" onClick={handleSearch}>\n                            search\n                        </button>\n                    </div>\n                </div>\n                <ResultList results={currentResults} loading={resultState.loading} getResults={getAllResults}/>\n                {!resultState.loading && <div className=\"flex justify-between items-center mt-4\">\n                    <div className=\"flex\">\n                        <Uploader dispatch={dispatch} action=\"UPLOAD_RESULT\" action_success=\"UPLOAD_RESULT_SUCCESS\" action_error=\"UPLOAD_RESULT_FAILURE\" url={uploadResult} refresh={getAllResults}/>\n                        {resultState.response?.results?.length > 0 &&  <Downloader dispatch={dispatch} action=\"DOWNLOAD_RESULT_SUCCESS\" headers={headers} data={resultState.response?.results || []} filename={'election_results.csv'} /> }\n                    </div>\n                    {resultState.results.length > 0 && <div>\n                        <Pagination totalRecords={resultState.results.length} pageLimit={10} pageNeighbours={2} onPageChanged={onPageChanged} />\n                    </div>}\n                </div>}\n            </div>\n        </Layout>\n    );\n}\n\nexport default Results;\n","/Users/user/Documents/gig/sr-tool/src/shared/components/Downloader.js",["377","378","379"],"import React from 'react';\nimport { apiRequest } from '../../lib/api';\nimport { CSVLink } from \"react-csv\";\n\nconst lgas = \"https://dl.dropboxusercontent.com/s/eui3rl43yf2m8nv/nuevo_test.csv\";\n\nconst Downloader = ({dispatch, action, action_success, action_error, headers, data, filename}) => {\n    const csvReport = {\n        data: data,\n        headers: headers,\n        filename: filename\n    };\n\n    // const downloadCSV = async (url, name) => {\n    //     dispatch(action);\n    //     apiRequest(lgas, 'get')\n    //         .then(res => {\n    //             let data = res.text();\n    //             let blob = new Blob([data], { type: \"data:text/csv;charset=utf-8,\" });\n    //             const blobURL = window.URL.createObjectURL(blob);\n    //             // Create new tag for download file\n    //             const anchor = document.createElement(\"a\");\n    //             anchor.download = name;\n    //             anchor.href = blobURL;\n    //             anchor.dataset.downloadurl = [\"text/csv\", anchor.download, anchor.href].join(\n    //                 \":\"\n    //             );\n    //             anchor.click();\n    //             // Remove URL.createObjectURL. The browser should not save the reference to the file.\n    //             setTimeout(() => {\n    //                 // For Firefox it is necessary to delay revoking the ObjectURL\n    //                 URL.revokeObjectURL(blobURL);\n    //             }, 100);\n    //             dispatch({type: action_success, payload: {response: \"Donload successfull\"}});\n    //         })\n    //         .catch(err => {\n    //             console.log(err);\n    //             dispatch({type: action_error, payload: {error: err}});\n    //         })\n    // };\n\n    return (\n        // <button className=\"border border-primary py-4 px-8 text-primary font-bold rounded-lg focus:outline-none\" onClick={downloadCSV}>Download</button>\n        <CSVLink className=\"border border-primary py-4 px-8 text-primary font-bold rounded-lg focus:outline-none\" data={data} headers={headers} filename={filename}>Download</CSVLink>\n    )\n}\n\nexport default Downloader;","/Users/user/Documents/gig/sr-tool/src/contexts/ResultContext.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/States/CreateState.js",["380"],"/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/CreateIncident.js",["381"],"/Users/user/Documents/gig/sr-tool/src/lib/url.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/States/index.js",["382","383","384"],"/Users/user/Documents/gig/sr-tool/src/Pages/States/components/Stateform.js",["385"],"import { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport ImageThumb from \"../../../shared/components/ImageThumb\";\nimport env from '../../../config/env.config';\n\nconst StateForm = ({formFields, handleFormSubmit}) => {\n    const [formValid, setFormValid] = useState(false);\n    const baseUrl = env().baseUrl;\n    const version = env().version;\n    let initialValues = {\n        name: '',\n        map: null\n    }\n\n    console.log(formFields)\n\n    const validate = (values) => {\n        console.log(values)\n        const errors = {};\n        if (!values.name) {\n            errors.name = 'Name is required';\n        }   else if (!values.svgUrl && !values.map) {\n            errors.map = 'You are required to upload a map';\n        }   else {\n            setFormValid(true);\n        }\n        return errors;\n    }\n\n    return (\n        <div className=\"lg:w-3/10 w-full\">\n            <Formik\n                initialValues={formFields || initialValues}\n                validate={values => validate(values)}\n                handleReset\n                >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleReset,\n                    handleBlur,\n                    handleSubmit,\n                    setFieldValue,\n                    isSubmitting,\n                    setSubmitting\n                }) => (\n                    <form onSubmit={(e) => handleFormSubmit(e, values, setSubmitting)} autoComplete=\"off\">\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Name\"\n                            />\n                            {errors.name && touched.name && <span className=\"text-xs text-red-600\">{errors.name}</span>}\n                        </div>\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"file\"\n                                name=\"map\"\n                                onChange={(event) => {\n                                   setFieldValue(\"map\", event.currentTarget.files[0]);\n                                }}\n                                onBlur={(event) => {\n                                    setFieldValue(\"map\", event.currentTarget.files[0]);\n                                }}\n                                accept=\".svg\"\n                                required={!formFields}\n                                className=\"custom-file-input w-full focus:outline-none placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Upload SVG\"\n                            />\n                            {values.svgUrl && <img src={`${baseUrl}/api/v${version}${values.svgUrl}`} />}\n                            {values.map && <ImageThumb image={values.map} />}\n                            {errors.map && <span className=\"text-xs text-red-600\">{errors.map}</span>}\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                            <button type=\"submit\" disabled={isSubmitting || !formValid} className=\"bg-primary py-4 text-white font-bold rounded-sm focus:outline-none w-4/10\">\n                                {formFields ? 'Update' : 'Add'} State\n                            </button>\n                            <button className=\"border border-primary py-4 text-primary font-bold rounded-sm focus:outline-none w-4/10\" onClick={handleReset} >\n                                Cancel\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default StateForm;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Parties/components/Partyform.js",["386","387"],"import { Formik } from \"formik\";\nimport React, { useState } from \"react\";\n\nconst PartyForm = ({formFields, handleFormSubmit}) => {\n    let initialValues = {\n        name: '',\n        code: ''\n    }\n\n    const validate = (values) => {\n        const errors = {};\n        const match = /[A-Z]+/g;\n        if (!values.name) {\n            errors.name = 'Party Name is required';\n        }   else if (!values.code) {\n            errors.code = 'Party Code is required';\n        }   \n        // else if(!match.test(values.code)) {\n        //     errors.code = 'Party Code should be uppercase';\n        // }\n        return errors;\n    }\n\n    return (\n        <div className=\"lg:w-3/10 w-full\">\n            <Formik\n                initialValues={formFields || initialValues}\n                validate={values => validate(values)}\n                onSubmit={handleFormSubmit}\n                handleReset\n                >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleReset,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                }) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Name\"\n                            />\n                            {errors.name && touched.name && <span className=\"text-xs text-red-600\">{errors.name}</span>}\n                        </div>\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"text\"\n                                name=\"code\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.code}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Code\"\n                            />\n                            {errors.code && touched.code && <span className=\"text-xs text-red-600\">{errors.code}</span>}\n                        </div>\n                        <div className=\"flex justify-between items-center w-full\">\n                            <button type=\"submit\" disabled={isSubmitting || errors.code || errors.name} className=\"bg-primary py-4 text-white font-bold rounded-sm focus:outline-none w-4/10\">\n                                {formFields ? 'Update' : 'Add'} Party\n                            </button>\n                            <button className=\"border border-primary py-4 text-primary font-bold rounded-sm focus:outline-none w-4/10\" onClick={handleReset} >\n                                Cancel\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default PartyForm;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Wards/components/WardForm.js",["388"],"/Users/user/Documents/gig/sr-tool/src/shared/NavTrigger.js",["389","390","391","392"],"/Users/user/Documents/gig/sr-tool/src/Pages/IncidentDashboard/components/IncidentsData.js",["393","394","395","396"],"/Users/user/Documents/gig/sr-tool/src/config/environment/prod.config.js",[],"/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/TerritoryIcon.js",[],"/Users/user/Documents/gig/sr-tool/src/config/environment/dev.config.js",[],"/Users/user/Documents/gig/sr-tool/src/contexts/PollingUnitContext.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/Wards/UpdateWard.js",["397","398"],"/Users/user/Documents/gig/sr-tool/src/Pages/Agents/UpdateAgent.js",["399","400"],"/Users/user/Documents/gig/sr-tool/src/Pages/Users/index.js",["401"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Breadcrumbs, Breadcrumb } from \"react-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext, UserController } from \"../../contexts/UserContext\";\nimport Layout from \"../../shared/Layout\";\nimport UserList from \"./UserList\";\nimport {users} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\n\nconst Users = ({match, location}) => {\n    const [search, setSearch] = useState('');\n    const [userState, dispatch] = useContext(UserContext);\n\n    const handleChange = (event) => {\n        setSearch(event.target.value);\n        console.log(event.target.value)\n    }\n\n    const handleSearch = () => {\n        dispatch({type: 'GET_USER_BY_NAME'});\n        //  setSubmitting(true);\n         apiRequest(users, 'get', {params: {code: search}})\n            .then((res) => {\n                dispatch({type: 'GET_USER_BY_NAME_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_USER_BY_NAME_FAILURE', payload: {error: err}});\n                showToast('error', 'Something went wrong. Please try again later')\n                // setSubmitting(false);\n            });\n    }\n\n    useEffect(() => {\n        dispatch({type: 'GET_USERS'});\n        //  setSubmitting(true);\n         apiRequest(users, 'get')\n            .then((res) => {\n                dispatch({type: 'GET_USERS_SUCCESS', payload: {response: res}});\n                // setSubmitting(false);\n            })\n            .catch((err) => {\n                dispatch({type: 'GET_USERS_FAILURE', payload: {error: err}});\n                showToast('error', 'Something went wrong. Please try again later')\n                // setSubmitting(false);\n            });\n    }, []);\n\n    return (\n        <UserController>\n            <Layout location={location}>\n                <Breadcrumbs className=\"shadow-container w-full lg:px-3.5 px-1 pt-7 pb-5 rounded-sm text-2xl font-bold\"/>\n                <Breadcrumb data={{\n                    title: 'Users',\n                    pathname: match.path\n                }}>\n                    <div className=\"my-6 shadow-container pl-2.5 pr-7 py-6\">\n                        <div className=\"flex justify-between px-1 mt-16\">\n                            <div className=\"w-8/10 flex items-center px-1\">\n                                <div className=\"w-7/10\">\n                                    <input className=\"border border-primary rounded-sm w-9.5/10 py-3 px-2 focus:outline-none\" name=\"search\" type=\"text\" value={search} onChange={handleChange} placeholder=\"Search users by name\"/>\n                                </div>\n                                <div className=\"w-3/10\">\n                                    <button disabled={search.length < 1} className=\"bg-primary button-padding py-3.5 text-white font-bold rounded-lg focus:outline-none\" onClick={handleSearch}>\n                                        search\n                                    </button>\n                                </div>\n                            </div>\n                            <Link className=\"bg-primary py-4 px-16 text-white font-bold rounded-sm\" to=\"/users/create\">\n                                Add User\n                            </Link>\n                        </div>\n                        <UserList users={userState.users}/>\n                    </div>\n                </Breadcrumb>\n            </Layout>\n        </UserController>\n    );\n}\n\nexport default Users;\n","/Users/user/Documents/gig/sr-tool/src/shared/Layout.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/components/LgaForm.js",["402"],"import { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { showToast } from \"../../../helpers/showToast\";\nimport { apiRequest } from \"../../../lib/api\";\nimport { allStates, getSenatorialDistrictsByStateId } from \"../../../lib/url\";\n\nconst LgaForm = ({formFields, handleFormSubmit}) => {\n    const [formValid, setFormValid] = useState(false);\n    const [states, setStates] = useState([]);\n    const [senatorialDistricts, setSenatorialDistricts] = useState([]);\n    let initialValues = {\n        state: '',\n        senatorialDistrict: '',\n        name: '',\n        number: ''\n    }\n    const [init, setInit] = useState(initialValues);\n\n    const validate = (values) => {\n        console.log(values);\n        const errors = {};\n        if (!values.state) {\n            errors.state = 'State is required';\n        }   else if (!values.senatorialDistrict) {\n            errors.senatorialDistrict = 'Senatorial District is required is required';\n        }   else if(!values.name) {\n            errors.name = 'LGA name is required';\n        }   else if(!values.number) {\n            errors.number = 'Number is required';\n        }   else {\n            setFormValid(true);\n        }\n        return errors;\n    }\n\n    const getStates = () => {\n        apiRequest(allStates, 'get')\n            .then(res => {\n                setStates(res.states);\n            })\n            .catch(err => {\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            })\n    }\n\n    const getSenatorialDistricts = (stateId) => {\n        if(stateId){apiRequest(`${getSenatorialDistrictsByStateId}/${stateId}`, 'get')\n            .then(res => {\n                console.log(res)\n                setSenatorialDistricts(res.senatorialDistricts);\n            })\n            .catch(err => {\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            })}\n    }\n\n    const handleStateChange = (event, setFieldValue) => {\n        const state =  event.currentTarget.value;\n        console.log(state)\n        setFieldValue(\"state\", state);\n        getSenatorialDistricts(state);\n    }\n\n    useEffect(() => {\n        setInit(formFields);\n        getStates();\n    }, []);\n\n    useEffect(() => {\n        getSenatorialDistricts(init?.state);\n    }, [init])\n\n    return (\n        <div className=\"lg:w-3/10 w-full\">\n            <Formik\n                initialValues={formFields || initialValues}\n                validate={values => validate(values)}\n                onSubmit={handleFormSubmit}\n                handleReset\n                >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleReset,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    setFieldValue\n                }) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <div className=\"mt-4 mb-12\">\n                            <select \n                                name=\"state\" \n                                onChange={(e)=>handleStateChange(e, setFieldValue)}\n                                onBlur={(e)=>handleStateChange(e,setFieldValue)}\n                                value={values.state}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm text-darkerGray\"\n                            >\n                                <option value='' disabled>State</option>\n                                {states.map(state => (<option key={state.id} value={state.id}>{state.name}</option>))}\n                            </select>\n                            {errors.state && touched.state && <span className=\"text-xs text-red-600\">{errors.state}</span>}\n                        </div>\n                        <div className=\"mt-4 mb-12\">\n                            <select \n                                name=\"senatorialDistrict\" \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.senatorialDistrict}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm text-darkerGray\"\n                                disabled={!values.state}\n                            >\n                                <option value='' disabled>Senatorial District</option>\n                                {senatorialDistricts.map(district => (<option key={district.id} value={district.id}>{district.name}</option>))}\n                            </select>\n                            {errors.senatorialDistrict && touched.senatorialDistrict && <span className=\"text-xs text-red-600\">{errors.senatorialDistrict}</span>}\n                        </div>\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Local Government Area\"\n                            />\n                            {errors.name && touched.name && <span className=\"text-xs text-red-600\">{errors.name}</span>}\n                        </div>\n                        <div className=\"mt-4 mb-12\">\n                            <input\n                                type=\"text\"\n                                name=\"number\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.number}\n                                className=\"w-full border border-primary rounded-sm py-3 px-2 focus:outline-none bg-transparent placeholder-darkerGray font-medium text-sm\"\n                                placeholder=\"Number\"\n                            />\n                            {errors.number && touched.number && <span className=\"text-xs text-red-600\">{errors.number}</span>}\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                            <button type=\"submit\" disabled={isSubmitting || !formValid} className=\"bg-primary py-4 text-white font-bold rounded-sm focus:outline-none w-4/10\">\n                                {formFields ? 'Update' : 'Add'} LGA\n                            </button>\n                            <button className=\"border border-primary py-4 text-primary font-bold rounded-sm focus:outline-none w-4/10\" onClick={handleReset} >\n                                Cancel\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default LgaForm;\n","/Users/user/Documents/gig/sr-tool/src/shared/components/Uploader.js",["403","404","405","406","407"],"/Users/user/Documents/gig/sr-tool/src/Pages/Parties/PartyList.js",["408","409"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport Modal from 'react-modal';\nimport Ellipsis from '../../shared/components/Ellipsis';\nimport {deleteParty} from '../../lib/url.js';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport { PartyContext } from '../../contexts/PartyContext';\nimport Loader from '../../shared/components/Loader';\n\nconst PartyList = ({parties, loading, getParties}) => {\n    const [partyState, dispatch] = useContext(PartyContext);\n    const [showModal, setShowModal] = useState(false);\n    const [currentParty, setCurrentParty] = useState(null);\n    const customStyles = {\n        overlay: {\n            backgroundColor: 'transparent'\n        },\n        content : {\n            top : '50%',\n            left : '50%',\n            right : 'auto',\n            width : '50%',\n            bottom : 'auto',\n            marginRight : '-50%',\n            padding: '29px 16px 40px 36px',\n            transform : 'translate(-50%, -50%)'\n        }\n    };\n\n    const handleDelete = () => {\n        dispatch({type: 'DELETE_PARTY'});\n         apiRequest(`${deleteParty}/${currentParty.id}`, 'delete')\n            .then((res) => {\n                dispatch({type: 'DELETE_PARTY_SUCCESS', payload: {response: res}});\n                setShowModal(false);\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n                getParties();\n            })\n            .catch((err) => {\n                dispatch({type: 'DELETE_PARTY_FAILURE', payload: {error: err}});\n                setShowModal(false);\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const triggerDelete = (party) => {\n        setCurrentParty(party);\n        openModal();\n    }\n\n    const openModal = () => {\n        setShowModal(true);\n    }\n\n    const closeModal = () => {\n        setShowModal(false);\n    }\n    return (\n        <div className=\"py-4 px-1 overflow-auto\">\n        <Modal\n          isOpen={showModal}\n          style={customStyles}\n          onRequestClose={closeModal}\n          contentLabel=\"Delete Modal\"\n        >\n            <div className=\"flex justify-between items-center mb-12\">\n                <p className=\"text-darkerGray font-bold text-lg\">Are you sure you want to delete {currentParty?.name}?</p>\n                <button onClick={closeModal} className=\"focus:outline-none\">close</button>\n            </div>\n          \n          <div className=\"text-center my-4\">Kindly note that this action is not reversible</div>\n            <div className=\"flex justify-between items-center\">\n                <button className=\"bg-textRed py-4 px-16 text-white font-bold rounded-sm focus:outline-none\" onClick={handleDelete}>Delete</button>\n                <button className=\"border border-primary py-4 px-16 text-primary font-bold rounded-sm focus:outline-none\" onClick={closeModal}>Cancel</button>\n            </div>\n        </Modal>\n            <div className=\"table\">\n                <div className=\"table-header\">\n                    <div className=\"custom-table-row w-full flex\">\n                        <div className=\"table-header-data w-3/10\">Name</div>\n                        <div className=\"table-header-data w-3/10\">Code</div>\n                        <div className=\"table-header-data w-4/10\"></div>\n                    </div>\n                    \n                </div>\n\n                {loading ? \n                <div className=\"flex justify-center my-6\">\n                        <Loader />\n                    </div>:\n                <div className=\"table-body\">\n                    {parties.length > 0 ?  parties.map((party) => (<div key={party.id} className=\"custom-table-row w-full flex\">\n                        <div className=\"table-row-data w-3/10\">{party.name}</div>\n                        <div className=\"table-row-data w-3/10\">{party.code}</div>\n                        <div className=\"table-row-data w-4/10\"> \n                            <span data-tip data-for={`ellipsis-party-${party.id}`} data-event='click'>\n                                <Ellipsis />\n                            </span>\n                            <ReactTooltip id={`ellipsis-party-${party.id}`} place=\"bottom\" type=\"light\" effect=\"solid\" border borderColor=\"#979797\" clickable={true}>\n                                <Link to={{pathname: `/parties/${party.id}`, state: {party: party}}} className=\"text-sm text-darkerGray block text-left\">Edit</Link>\n                                <button onClick={()=>triggerDelete(party)} className=\"text-sm text-textRed block text-left focus:outline-none\">Delete</button>\n                            </ReactTooltip>\n                        </div>\n                    </div>))\n                    : <div className=\"table-row-data w-full text-center my-4\">There are no parties to display</div>}\n                </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default PartyList;\n","/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/PartyIcon.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/PollingUnitList.js",["410"],"/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/UserIcon.js",[],"/Users/user/Documents/gig/sr-tool/src/contexts/StateContext.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/Users/components/Userform.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/Agents/components/AgentForm.js",["411"],"/Users/user/Documents/gig/sr-tool/src/Pages/Incidents/IncidentList.js",["412"],"import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport Modal from 'react-modal';\nimport Ellipsis from '../../shared/components/Ellipsis';\nimport {apiRequest} from '../../lib/api.js';\nimport { showToast } from '../../helpers/showToast';\nimport { deleteIncident } from '../../lib/url';\nimport Loader from '../../shared/components/Loader';\nimport { IncidentContext } from '../../contexts/IncidentContext';\n\nconst IncidentList = ({incidents, loading, getIncidents}) => {\n    const [incidentState, dispatch] = useContext(IncidentContext);\n    const [showModal, setShowModal] = useState(false);\n    const [currentIncident, setCurrentIncident] = useState('');\n    const customStyles = {\n        overlay: {\n            backgroundColor: 'transparent'\n        },\n        content : {\n            top : '50%',\n            left : '50%',\n            right : 'auto',\n            width : '50%',\n            bottom : 'auto',\n            marginRight : '-50%',\n            padding: '29px 16px 40px 36px',\n            transform : 'translate(-50%, -50%)'\n        }\n    };\n\n    const handleDelete = () => {\n        dispatch({type: 'DELETE_INCIDENT'});\n         apiRequest(`${deleteIncident}/${currentIncident.id}`, 'delete')\n            .then((res) => {\n                dispatch({type: 'DELETE_INCIDENT_SUCCESS', payload: {response: res}});\n                setShowModal(false);\n                // showToast('success', `${res.statusCode}: ${res.statusMessage}`);\n                getIncidents();\n            })\n            .catch((err) => {\n                dispatch({type: 'DELETE_INCIDENT_FAILURE', payload: {error: err}});\n                setShowModal(false);\n                showToast('error', `${err?.response?.data.statusCode || \"Error\"}: ${err?.response?.data.statusMessage || \"Something went wrong. Please try again later.\"}`)\n            });\n    }\n\n    const triggerDelete = (incident) => {\n        setCurrentIncident(incident);\n        openModal();\n    }\n\n    const openModal = () => {\n        setShowModal(true);\n    }\n\n    const closeModal = () => {\n        setShowModal(false);\n    }\n    return (\n        <div className=\"py-4 px-1 overflow-auto\">\n        <Modal\n          isOpen={showModal}\n          style={customStyles}\n          onRequestClose={closeModal}\n          contentLabel=\"Delete Modal\"\n        >\n            <div className=\"flex justify-between items-center mb-12\">\n                <p className=\"text-darkerGray font-bold text-lg\">Are you sure you want to delete {currentIncident}?</p>\n                <button onClick={closeModal} className=\"focus:outline-none\">close</button>\n            </div>\n          \n          <div className=\"text-center my-4\">Kindly note that this action is not reversible</div>\n            <div className=\"flex justify-between items-center\">\n                <button className=\"bg-textRed py-4 px-16 text-white font-bold rounded-sm focus:outline-none\" onClick={handleDelete}>Delete</button>\n                <button className=\"border border-primary py-4 px-16 text-primary font-bold rounded-sm focus:outline-none\" onClick={closeModal}>Cancel</button>\n            </div>\n        </Modal>\n            <div className=\"table\">\n                <div className=\"table-header\">\n                    <div className=\"custom-table-row w-full flex\">\n                        <div className=\"table-header-data w-2/12\">Incident Type</div>\n                        <div className=\"table-header-data w-2/12\">Incident Status</div>\n                        <div className=\"table-header-data w-2/12\">Local Government Area</div>\n                        <div className=\"table-header-data w-1/12\">Ward</div>\n                        <div className=\"table-header-data w-2/12\">Polling Unit</div>\n                        <div className=\"table-header-data w-1/12\">Location</div>\n                        <div className=\"table-header-data w-1/12\">Description</div>\n                        <div className=\"table-header-data w-1/12\"></div>\n                    </div>\n                    \n                </div>\n                {loading ? \n                    <div className=\"flex justify-center my-6\">\n                        <Loader />\n                    </div> :\n                    <div className=\"table-body\">\n                        {incidents.length > 0 ? \n                            incidents.map((incident) => (<div key={incident.id} className=\"custom-table-row w-full flex\">\n                                <div className=\"table-row-data w-2/12\">{incident.incidentType.name || ''}</div>\n                                <div className=\"table-row-data w-2/12\">{incident.incidentStatus.name || ''}</div>\n                                <div className=\"table-row-data w-2/12\">{incident.lga.name || ''}</div>\n                                <div className=\"table-row-data w-1/12\">{incident.ward.name || ''}</div>\n                                <div className=\"table-row-data w-2/12\">{incident.pollingUnit.name || ''}</div>\n                                <div className=\"table-row-data w-1/12\">{incident.location || ''}</div>\n                                <div className=\"table-row-data w-1/12\">{incident.description || ''}</div>\n                                <div className=\"table-row-data w-1/12\"> \n                                    <span data-tip data-for={`ellipsis-incident-${incident.id}`} data-event='click'>\n                                        <Ellipsis />\n                                    </span>\n                                    <ReactTooltip id={`ellipsis-incident-${incident.id}`} place=\"bottom\" type=\"light\" effect=\"solid\" border borderColor=\"#979797\" clickable={true}>\n                                        <Link to={{pathname: `/incidents/${incident.id}`, state: {incident: incident}}} className=\"text-sm text-darkerGray block text-left\">Edit</Link>\n                                        <button onClick={()=>triggerDelete(incident)} className=\"text-sm text-textRed block text-left focus:outline-none\">Delete</button>\n                                    </ReactTooltip>\n                                </div>\n                            </div>))\n                        : <div className=\"table-row-data w-full text-center my-4\">There are no incidents to display</div>}\n                    </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default IncidentList;\n","/Users/user/Documents/gig/sr-tool/src/Pages/Lgas/LgaList.js",["413"],"/Users/user/Documents/gig/sr-tool/src/contexts/IncidentContext.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/Users/CreateUser.js",["414","415"],"/Users/user/Documents/gig/sr-tool/src/Pages/Parties/UpdateParty.js",["416","417"],"/Users/user/Documents/gig/sr-tool/src/lib/api.js",[],"/Users/user/Documents/gig/sr-tool/src/helpers/showToast.js",["418","419"],"import { toast } from \"react-toastify\";\n\nexport const showToast = (type, message) => {\n    switch (type) {\n        case 'error':\n            return(\n                toast.error(message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            )\n            break;\n        case 'success':\n            return(\n                toast.success(message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                })\n            )\n            break;\n                \n        default:\n            break;\n    }\n}","/Users/user/Documents/gig/sr-tool/src/Pages/Agents/AgentList.js",["420","421"],"/Users/user/Documents/gig/sr-tool/src/shared/components/Ellipsis.js",[],"/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/ResultIcon.js",[],"/Users/user/Documents/gig/sr-tool/src/contexts/UserContext.js",[],"/Users/user/Documents/gig/sr-tool/src/Pages/PollingUnits/UpdatePollingUnit.js",["422","423"],"/Users/user/Documents/gig/sr-tool/src/shared/assets/icons/AgentIcon.js",[],{"ruleId":"424","severity":1,"message":"425","line":53,"column":10,"nodeType":"426","messageId":"427","endLine":53,"endColumn":19},{"ruleId":"424","severity":1,"message":"428","line":53,"column":21,"nodeType":"426","messageId":"427","endLine":53,"endColumn":29},{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","replacedBy":"432"},{"ruleId":"429","replacedBy":"433"},{"ruleId":"431","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":15,"column":25,"nodeType":"437","endLine":15,"endColumn":197},{"ruleId":"435","severity":1,"message":"436","line":20,"column":25,"nodeType":"437","endLine":20,"endColumn":197},{"ruleId":"435","severity":1,"message":"436","line":25,"column":25,"nodeType":"437","endLine":25,"endColumn":150},{"ruleId":"435","severity":1,"message":"436","line":30,"column":25,"nodeType":"437","endLine":30,"endColumn":197},{"ruleId":"424","severity":1,"message":"438","line":14,"column":12,"nodeType":"426","messageId":"427","endLine":14,"endColumn":17},{"ruleId":"439","severity":1,"message":"440","line":65,"column":8,"nodeType":"441","endLine":65,"endColumn":10,"suggestions":"442"},{"ruleId":"424","severity":1,"message":"443","line":11,"column":12,"nodeType":"426","messageId":"427","endLine":11,"endColumn":22},{"ruleId":"424","severity":1,"message":"444","line":25,"column":12,"nodeType":"426","messageId":"427","endLine":25,"endColumn":23},{"ruleId":"424","severity":1,"message":"445","line":26,"column":27,"nodeType":"426","messageId":"427","endLine":26,"endColumn":43},{"ruleId":"424","severity":1,"message":"446","line":9,"column":10,"nodeType":"426","messageId":"427","endLine":9,"endColumn":16},{"ruleId":"424","severity":1,"message":"447","line":24,"column":12,"nodeType":"426","messageId":"427","endLine":24,"endColumn":25},{"ruleId":"424","severity":1,"message":"448","line":25,"column":29,"nodeType":"426","messageId":"427","endLine":25,"endColumn":47},{"ruleId":"424","severity":1,"message":"438","line":15,"column":12,"nodeType":"426","messageId":"427","endLine":15,"endColumn":17},{"ruleId":"429","replacedBy":"449"},{"ruleId":"431","replacedBy":"450"},{"ruleId":"424","severity":1,"message":"451","line":9,"column":3,"nodeType":"426","messageId":"427","endLine":9,"endColumn":11},{"ruleId":"424","severity":1,"message":"452","line":89,"column":11,"nodeType":"426","messageId":"427","endLine":89,"endColumn":23},{"ruleId":"424","severity":1,"message":"453","line":401,"column":13,"nodeType":"426","messageId":"427","endLine":401,"endColumn":18},{"ruleId":"424","severity":1,"message":"454","line":401,"column":20,"nodeType":"426","messageId":"427","endLine":401,"endColumn":26},{"ruleId":"439","severity":1,"message":"455","line":447,"column":6,"nodeType":"441","endLine":447,"endColumn":18,"suggestions":"456"},{"ruleId":"424","severity":1,"message":"457","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":25},{"ruleId":"424","severity":1,"message":"458","line":1,"column":27,"nodeType":"426","messageId":"427","endLine":1,"endColumn":36},{"ruleId":"424","severity":1,"message":"459","line":1,"column":46,"nodeType":"426","messageId":"427","endLine":1,"endColumn":54},{"ruleId":"424","severity":1,"message":"460","line":6,"column":11,"nodeType":"426","messageId":"427","endLine":6,"endColumn":15},{"ruleId":"424","severity":1,"message":"461","line":67,"column":11,"nodeType":"426","messageId":"427","endLine":67,"endColumn":21},{"ruleId":"424","severity":1,"message":"462","line":86,"column":11,"nodeType":"426","messageId":"427","endLine":86,"endColumn":14},{"ruleId":"424","severity":1,"message":"453","line":87,"column":13,"nodeType":"426","messageId":"427","endLine":87,"endColumn":18},{"ruleId":"424","severity":1,"message":"454","line":88,"column":9,"nodeType":"426","messageId":"427","endLine":88,"endColumn":15},{"ruleId":"424","severity":1,"message":"463","line":101,"column":9,"nodeType":"426","messageId":"427","endLine":101,"endColumn":11},{"ruleId":"424","severity":1,"message":"464","line":111,"column":5,"nodeType":"426","messageId":"427","endLine":111,"endColumn":9},{"ruleId":"465","severity":1,"message":"466","line":125,"column":17,"nodeType":"467","messageId":"468","endLine":125,"endColumn":34,"fix":"469"},{"ruleId":"424","severity":1,"message":"470","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":16},{"ruleId":"424","severity":1,"message":"471","line":7,"column":32,"nodeType":"426","messageId":"427","endLine":7,"endColumn":49},{"ruleId":"424","severity":1,"message":"472","line":7,"column":52,"nodeType":"426","messageId":"427","endLine":7,"endColumn":64},{"ruleId":"424","severity":1,"message":"473","line":7,"column":80,"nodeType":"426","messageId":"427","endLine":7,"endColumn":111},{"ruleId":"424","severity":1,"message":"474","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":23},{"ruleId":"424","severity":1,"message":"447","line":15,"column":12,"nodeType":"426","messageId":"427","endLine":15,"endColumn":25},{"ruleId":"424","severity":1,"message":"475","line":16,"column":33,"nodeType":"426","messageId":"427","endLine":16,"endColumn":54},{"ruleId":"424","severity":1,"message":"476","line":17,"column":18,"nodeType":"426","messageId":"427","endLine":17,"endColumn":25},{"ruleId":"424","severity":1,"message":"477","line":20,"column":12,"nodeType":"426","messageId":"427","endLine":20,"endColumn":16},{"ruleId":"424","severity":1,"message":"478","line":20,"column":18,"nodeType":"426","messageId":"427","endLine":20,"endColumn":25},{"ruleId":"439","severity":1,"message":"479","line":58,"column":8,"nodeType":"441","endLine":58,"endColumn":10,"suggestions":"480"},{"ruleId":"424","severity":1,"message":"481","line":19,"column":23,"nodeType":"426","messageId":"427","endLine":19,"endColumn":35},{"ruleId":"424","severity":1,"message":"482","line":20,"column":20,"nodeType":"426","messageId":"427","endLine":20,"endColumn":29},{"ruleId":"424","severity":1,"message":"483","line":21,"column":12,"nodeType":"426","messageId":"427","endLine":21,"endColumn":23},{"ruleId":"439","severity":1,"message":"484","line":94,"column":8,"nodeType":"441","endLine":94,"endColumn":10,"suggestions":"485"},{"ruleId":"424","severity":1,"message":"483","line":22,"column":12,"nodeType":"426","messageId":"427","endLine":22,"endColumn":23},{"ruleId":"439","severity":1,"message":"486","line":125,"column":8,"nodeType":"441","endLine":125,"endColumn":10,"suggestions":"487"},{"ruleId":"439","severity":1,"message":"488","line":130,"column":8,"nodeType":"441","endLine":130,"endColumn":21,"suggestions":"489"},{"ruleId":"439","severity":1,"message":"488","line":135,"column":8,"nodeType":"441","endLine":135,"endColumn":20,"suggestions":"490"},{"ruleId":"439","severity":1,"message":"491","line":139,"column":8,"nodeType":"441","endLine":139,"endColumn":32,"suggestions":"492"},{"ruleId":"439","severity":1,"message":"493","line":139,"column":9,"nodeType":"467","endLine":139,"endColumn":31},{"ruleId":"424","severity":1,"message":"494","line":13,"column":12,"nodeType":"426","messageId":"427","endLine":13,"endColumn":21},{"ruleId":"424","severity":1,"message":"460","line":5,"column":11,"nodeType":"426","messageId":"427","endLine":5,"endColumn":15},{"ruleId":"424","severity":1,"message":"462","line":60,"column":11,"nodeType":"426","messageId":"427","endLine":60,"endColumn":14},{"ruleId":"424","severity":1,"message":"453","line":61,"column":13,"nodeType":"426","messageId":"427","endLine":61,"endColumn":18},{"ruleId":"424","severity":1,"message":"454","line":62,"column":9,"nodeType":"426","messageId":"427","endLine":62,"endColumn":15},{"ruleId":"424","severity":1,"message":"463","line":75,"column":9,"nodeType":"426","messageId":"427","endLine":75,"endColumn":11},{"ruleId":"424","severity":1,"message":"464","line":85,"column":5,"nodeType":"426","messageId":"427","endLine":85,"endColumn":9},{"ruleId":"465","severity":1,"message":"466","line":99,"column":17,"nodeType":"467","messageId":"468","endLine":99,"endColumn":34,"fix":"495"},{"ruleId":"424","severity":1,"message":"428","line":6,"column":21,"nodeType":"426","messageId":"427","endLine":6,"endColumn":29},{"ruleId":"424","severity":1,"message":"496","line":12,"column":13,"nodeType":"426","messageId":"427","endLine":12,"endColumn":22},{"ruleId":"424","severity":1,"message":"476","line":19,"column":18,"nodeType":"426","messageId":"427","endLine":19,"endColumn":25},{"ruleId":"424","severity":1,"message":"497","line":20,"column":19,"nodeType":"426","messageId":"427","endLine":20,"endColumn":27},{"ruleId":"424","severity":1,"message":"498","line":21,"column":26,"nodeType":"426","messageId":"427","endLine":21,"endColumn":41},{"ruleId":"424","severity":1,"message":"483","line":22,"column":12,"nodeType":"426","messageId":"427","endLine":22,"endColumn":23},{"ruleId":"439","severity":1,"message":"499","line":99,"column":8,"nodeType":"441","endLine":99,"endColumn":10,"suggestions":"500"},{"ruleId":"424","severity":1,"message":"501","line":75,"column":23,"nodeType":"426","messageId":"427","endLine":75,"endColumn":27},{"ruleId":"424","severity":1,"message":"502","line":76,"column":23,"nodeType":"426","messageId":"427","endLine":76,"endColumn":28},{"ruleId":"439","severity":1,"message":"503","line":104,"column":8,"nodeType":"441","endLine":104,"endColumn":21,"suggestions":"504"},{"ruleId":"435","severity":1,"message":"436","line":131,"column":19,"nodeType":"437","endLine":131,"endColumn":110},{"ruleId":"435","severity":1,"message":"436","line":140,"column":19,"nodeType":"437","endLine":140,"endColumn":107},{"ruleId":"435","severity":1,"message":"436","line":149,"column":19,"nodeType":"437","endLine":149,"endColumn":92},{"ruleId":"505","severity":1,"message":"506","line":156,"column":155,"nodeType":"507","messageId":"508","endLine":156,"endColumn":157},{"ruleId":"424","severity":1,"message":"481","line":19,"column":23,"nodeType":"426","messageId":"427","endLine":19,"endColumn":35},{"ruleId":"424","severity":1,"message":"482","line":20,"column":20,"nodeType":"426","messageId":"427","endLine":20,"endColumn":29},{"ruleId":"424","severity":1,"message":"476","line":21,"column":18,"nodeType":"426","messageId":"427","endLine":21,"endColumn":25},{"ruleId":"424","severity":1,"message":"483","line":23,"column":12,"nodeType":"426","messageId":"427","endLine":23,"endColumn":23},{"ruleId":"439","severity":1,"message":"509","line":97,"column":8,"nodeType":"441","endLine":97,"endColumn":10,"suggestions":"510"},{"ruleId":"424","severity":1,"message":"481","line":19,"column":23,"nodeType":"426","messageId":"427","endLine":19,"endColumn":35},{"ruleId":"424","severity":1,"message":"482","line":20,"column":20,"nodeType":"426","messageId":"427","endLine":20,"endColumn":29},{"ruleId":"424","severity":1,"message":"476","line":21,"column":18,"nodeType":"426","messageId":"427","endLine":21,"endColumn":25},{"ruleId":"424","severity":1,"message":"483","line":23,"column":12,"nodeType":"426","messageId":"427","endLine":23,"endColumn":23},{"ruleId":"439","severity":1,"message":"511","line":95,"column":8,"nodeType":"441","endLine":95,"endColumn":10,"suggestions":"512"},{"ruleId":"424","severity":1,"message":"483","line":22,"column":12,"nodeType":"426","messageId":"427","endLine":22,"endColumn":23},{"ruleId":"439","severity":1,"message":"513","line":134,"column":8,"nodeType":"441","endLine":134,"endColumn":10,"suggestions":"514"},{"ruleId":"439","severity":1,"message":"488","line":139,"column":8,"nodeType":"441","endLine":139,"endColumn":21,"suggestions":"515"},{"ruleId":"439","severity":1,"message":"488","line":144,"column":8,"nodeType":"441","endLine":144,"endColumn":20,"suggestions":"516"},{"ruleId":"439","severity":1,"message":"491","line":148,"column":8,"nodeType":"441","endLine":148,"endColumn":32,"suggestions":"517"},{"ruleId":"439","severity":1,"message":"493","line":148,"column":9,"nodeType":"467","endLine":148,"endColumn":31},{"ruleId":"424","severity":1,"message":"518","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":20},{"ruleId":"424","severity":1,"message":"519","line":5,"column":7,"nodeType":"426","messageId":"427","endLine":5,"endColumn":11},{"ruleId":"424","severity":1,"message":"520","line":8,"column":11,"nodeType":"426","messageId":"427","endLine":8,"endColumn":20},{"ruleId":"424","severity":1,"message":"438","line":11,"column":12,"nodeType":"426","messageId":"427","endLine":11,"endColumn":17},{"ruleId":"424","severity":1,"message":"447","line":11,"column":12,"nodeType":"426","messageId":"427","endLine":11,"endColumn":25},{"ruleId":"424","severity":1,"message":"521","line":2,"column":23,"nodeType":"426","messageId":"427","endLine":2,"endColumn":33},{"ruleId":"424","severity":1,"message":"483","line":16,"column":12,"nodeType":"426","messageId":"427","endLine":16,"endColumn":23},{"ruleId":"439","severity":1,"message":"522","line":80,"column":8,"nodeType":"441","endLine":80,"endColumn":10,"suggestions":"523"},{"ruleId":"524","severity":1,"message":"525","line":77,"column":47,"nodeType":"437","endLine":77,"endColumn":105},{"ruleId":"424","severity":1,"message":"459","line":2,"column":17,"nodeType":"426","messageId":"427","endLine":2,"endColumn":25},{"ruleId":"424","severity":1,"message":"526","line":12,"column":15,"nodeType":"426","messageId":"427","endLine":12,"endColumn":20},{"ruleId":"439","severity":1,"message":"527","line":81,"column":8,"nodeType":"441","endLine":81,"endColumn":10,"suggestions":"528"},{"ruleId":"424","severity":1,"message":"458","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":26},{"ruleId":"424","severity":1,"message":"453","line":7,"column":12,"nodeType":"426","messageId":"427","endLine":7,"endColumn":17},{"ruleId":"424","severity":1,"message":"454","line":7,"column":19,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"524","severity":1,"message":"525","line":20,"column":67,"nodeType":"437","endLine":20,"endColumn":137},{"ruleId":"424","severity":1,"message":"447","line":10,"column":12,"nodeType":"426","messageId":"427","endLine":10,"endColumn":25},{"ruleId":"424","severity":1,"message":"529","line":105,"column":11,"nodeType":"426","messageId":"427","endLine":105,"endColumn":27},{"ruleId":"424","severity":1,"message":"530","line":118,"column":11,"nodeType":"426","messageId":"427","endLine":118,"endColumn":30},{"ruleId":"439","severity":1,"message":"531","line":157,"column":8,"nodeType":"441","endLine":157,"endColumn":14,"suggestions":"532"},{"ruleId":"424","severity":1,"message":"494","line":20,"column":12,"nodeType":"426","messageId":"427","endLine":20,"endColumn":21},{"ruleId":"424","severity":1,"message":"533","line":21,"column":25,"nodeType":"426","messageId":"427","endLine":21,"endColumn":39},{"ruleId":"424","severity":1,"message":"443","line":20,"column":12,"nodeType":"426","messageId":"427","endLine":20,"endColumn":22},{"ruleId":"424","severity":1,"message":"534","line":21,"column":26,"nodeType":"426","messageId":"427","endLine":21,"endColumn":41},{"ruleId":"439","severity":1,"message":"535","line":48,"column":8,"nodeType":"441","endLine":48,"endColumn":10,"suggestions":"536"},{"ruleId":"439","severity":1,"message":"527","line":67,"column":8,"nodeType":"441","endLine":67,"endColumn":10,"suggestions":"537"},{"ruleId":"424","severity":1,"message":"538","line":3,"column":13,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"539","line":8,"column":9,"nodeType":"426","messageId":"427","endLine":8,"endColumn":20},{"ruleId":"505","severity":1,"message":"506","line":15,"column":33,"nodeType":"507","messageId":"508","endLine":15,"endColumn":35},{"ruleId":"505","severity":1,"message":"506","line":20,"column":22,"nodeType":"507","messageId":"508","endLine":20,"endColumn":24},{"ruleId":"505","severity":1,"message":"506","line":22,"column":33,"nodeType":"507","messageId":"508","endLine":22,"endColumn":35},{"ruleId":"424","severity":1,"message":"458","line":1,"column":29,"nodeType":"426","messageId":"427","endLine":1,"endColumn":38},{"ruleId":"424","severity":1,"message":"540","line":13,"column":12,"nodeType":"426","messageId":"427","endLine":13,"endColumn":22},{"ruleId":"424","severity":1,"message":"541","line":13,"column":12,"nodeType":"426","messageId":"427","endLine":13,"endColumn":19},{"ruleId":"439","severity":1,"message":"527","line":92,"column":8,"nodeType":"441","endLine":92,"endColumn":10,"suggestions":"542"},{"ruleId":"424","severity":1,"message":"447","line":13,"column":12,"nodeType":"426","messageId":"427","endLine":13,"endColumn":25},{"ruleId":"424","severity":1,"message":"543","line":13,"column":12,"nodeType":"426","messageId":"427","endLine":13,"endColumn":20},{"ruleId":"424","severity":1,"message":"544","line":3,"column":23,"nodeType":"426","messageId":"427","endLine":3,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":11,"column":12,"nodeType":"426","messageId":"427","endLine":11,"endColumn":21},{"ruleId":"424","severity":1,"message":"540","line":12,"column":12,"nodeType":"426","messageId":"427","endLine":12,"endColumn":22},{"ruleId":"424","severity":1,"message":"545","line":13,"column":19,"nodeType":"426","messageId":"427","endLine":13,"endColumn":27},{"ruleId":"546","severity":1,"message":"547","line":17,"column":13,"nodeType":"548","messageId":"549","endLine":17,"endColumn":19},{"ruleId":"546","severity":1,"message":"547","line":30,"column":13,"nodeType":"548","messageId":"549","endLine":30,"endColumn":19},{"ruleId":"424","severity":1,"message":"443","line":14,"column":12,"nodeType":"426","messageId":"427","endLine":14,"endColumn":22},{"ruleId":"524","severity":1,"message":"525","line":105,"column":190,"nodeType":"437","endLine":105,"endColumn":232},{"ruleId":"424","severity":1,"message":"541","line":20,"column":12,"nodeType":"426","messageId":"427","endLine":20,"endColumn":19},{"ruleId":"424","severity":1,"message":"550","line":21,"column":32,"nodeType":"426","messageId":"427","endLine":21,"endColumn":53},"no-unused-vars","'userState' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["551"],"no-negated-in-lhs",["552"],["551"],["552"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getState'. Either include it or remove the dependency array.","ArrayExpression",["553"],"'agentState' is assigned a value but never used.","'resultState' is assigned a value but never used.","'setCurrentResult' is assigned a value but never used.","'values' is defined but never used.","'incidentState' is assigned a value but never used.","'setCurrentIncident' is assigned a value but never used.",["551"],["552"],"'axisLeft' is defined but never used.","'incidentData' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colors' and 'someData'. Either include them or remove the dependency array.",["554"],"'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'yRef' is assigned a value but never used.","'percentege' is assigned a value but never used.","'ref' is assigned a value but never used.","'gy' is assigned a value but never used.","'bars' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property attr.","MemberExpression","unexpectedWhitespace",{"range":"555","text":"556"},"'BarChart' is defined but never used.","'getDashboardByLga' is defined but never used.","'getDashboard' is defined but never used.","'getSenatorialDistrictsByStateId' is defined but never used.","'StackedBarChart' is defined but never used.","'setSenatorialDistrict' is assigned a value but never used.","'setLgas' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDashboardData'. Either include it or remove the dependency array.",["557"],"'setDistricts' is assigned a value but never used.","'setStates' is assigned a value but never used.","'currentPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllLgas'. Either include it or remove the dependency array.",["558"],"React Hook useEffect has a missing dependency: 'getAllAgents'. Either include it or remove the dependency array.",["559"],"React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.",["560"],["561"],"React Hook useEffect has missing dependencies: 'filter' and 'filterData'. Either include them or remove the dependency array.",["562"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'wardState' is assigned a value but never used.",{"range":"563","text":"556"},"'authState' is assigned a value but never used.","'setWards' is assigned a value but never used.","'setPollingUnits' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllIncidents'. Either include it or remove the dependency array.",["564"],"'left' is assigned a value but never used.","'right' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allPages', 'onPageChanged', 'pageLimit', and 'totalRecords'. Either include them or remove the dependency array. If 'onPageChanged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["565"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getAllPollingUnits'. Either include it or remove the dependency array.",["566"],"React Hook useEffect has a missing dependency: 'getAllWards'. Either include it or remove the dependency array.",["567"],"React Hook useEffect has a missing dependency: 'getAllResults'. Either include it or remove the dependency array.",["568"],["569"],["570"],["571"],"'apiRequest' is defined but never used.","'lgas' is assigned a value but never used.","'csvReport' is assigned a value but never used.","'Breadcrumb' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllStates'. Either include it or remove the dependency array.",["572"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'match' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formFields'. Either include it or remove the dependency array. If 'setInit' needs the current value of 'formFields', you can also switch to useReducer instead of useState and read 'formFields' in the reducer.",["573"],"'getDashboardData' is assigned a value but never used.","'getDashboardLgaData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colorMap'. Either include it or remove the dependency array.",["574"],"'setCurrentWard' is assigned a value but never used.","'setCurrentAgent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["575"],["576"],"'XLSX' is defined but never used.","'processData' is assigned a value but never used.","'partyState' is assigned a value but never used.","'puState' is assigned a value but never used.",["577"],"'lgaState' is assigned a value but never used.","'UserController' is defined but never used.","'setParty' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setCurrentPollingUnit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},[3597,3606],".",{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},[2618,2627],{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"588","fix":"604"},{"desc":"590","fix":"605"},{"desc":"592","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"609","fix":"615"},{"desc":"609","fix":"616"},"Update the dependencies array to be: [getState]",{"range":"617","text":"618"},"Update the dependencies array to be: [colors, data, keys, someData]",{"range":"619","text":"620"},"Update the dependencies array to be: [getDashboardData]",{"range":"621","text":"622"},"Update the dependencies array to be: [getAllLgas]",{"range":"623","text":"624"},"Update the dependencies array to be: [getAllAgents]",{"range":"625","text":"626"},"Update the dependencies array to be: [filter.ward, filterData]",{"range":"627","text":"628"},"Update the dependencies array to be: [filter.lga, filterData]",{"range":"629","text":"630"},"Update the dependencies array to be: [filter, filterData]",{"range":"631","text":"632"},"Update the dependencies array to be: [getAllIncidents]",{"range":"633","text":"634"},"Update the dependencies array to be: [allPages, currentPage, onPageChanged, pageLimit, totalRecords]",{"range":"635","text":"636"},"Update the dependencies array to be: [getAllPollingUnits]",{"range":"637","text":"638"},"Update the dependencies array to be: [getAllWards]",{"range":"639","text":"640"},"Update the dependencies array to be: [getAllResults]",{"range":"641","text":"642"},{"range":"643","text":"628"},{"range":"644","text":"630"},{"range":"645","text":"632"},"Update the dependencies array to be: [getAllStates]",{"range":"646","text":"647"},"Update the dependencies array to be: [formFields]",{"range":"648","text":"649"},"Update the dependencies array to be: [colorMap, data]",{"range":"650","text":"651"},"Update the dependencies array to be: [dispatch]",{"range":"652","text":"653"},{"range":"654","text":"649"},{"range":"655","text":"649"},[2731,2733],"[getState]",[12805,12817],"[colors, data, keys, someData]",[2710,2712],"[getDashboardData]",[4095,4097],"[getAllLgas]",[5572,5574],"[getAllAgents]",[5686,5699],"[filter.ward, filterData]",[5800,5812],"[filter.lga, filterData]",[5904,5928],"[filter, filterData]",[4441,4443],"[getAllIncidents]",[3354,3367],"[allPages, currentPage, onPageChanged, pageLimit, totalRecords]",[4490,4492],"[getAllPollingUnits]",[4211,4213],"[getAllWards]",[5840,5842],"[getAllResults]",[5954,5967],[6068,6080],[6172,6196],[3489,3491],"[getAllStates]",[2968,2970],"[formFields]",[6060,6066],"[colorMap, data]",[1881,1883],"[dispatch]",[2409,2411],[3196,3198]]